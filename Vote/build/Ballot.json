{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "proposalName",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "chairperson",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "delegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_voter",
          "type": "address"
        }
      ],
      "name": "giveRightToVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "name",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "voteCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposal",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "voters",
      "outputs": [
        {
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "vote",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "weight",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "voted",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "winnerName",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "winnerName_",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "winningProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "winningProposal_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Ballot.sol"
  },
  "ast": {
    "absolutePath": "contracts/Ballot.sol",
    "exportedSymbols": {
      "Ballot": [
        318
      ]
    },
    "id": 319,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Ballot",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 318,
        "linearizedBaseContracts": [
          318
        ],
        "name": "Ballot",
        "nameLocation": "75:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "2e4176cf",
            "id": 3,
            "mutability": "mutable",
            "name": "chairperson",
            "nameLocation": "118:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 318,
            "src": "103:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "103:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Ballot.Voter",
            "id": 12,
            "members": [
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "delegate",
                "nameLocation": "214:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "206:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 4,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "206:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7,
                "mutability": "mutable",
                "name": "vote",
                "nameLocation": "283:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "275:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 6,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "275:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9,
                "mutability": "mutable",
                "name": "weight",
                "nameLocation": "336:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "328:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 8,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "328:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "voted",
                "nameLocation": "380:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "375:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 10,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "375:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Voter",
            "nameLocation": "190:5:0",
            "nodeType": "StructDefinition",
            "scope": 318,
            "src": "183:243:0",
            "visibility": "public"
          },
          {
            "canonicalName": "Ballot.Proposal",
            "id": 17,
            "members": [
              {
                "constant": false,
                "id": 14,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "507:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "499:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 13,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "499:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "mutability": "mutable",
                "name": "voteCount",
                "nameLocation": "563:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "555:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "555:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Proposal",
            "nameLocation": "480:8:0",
            "nodeType": "StructDefinition",
            "scope": 318,
            "src": "473:137:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a3ec138d",
            "id": 22,
            "mutability": "mutable",
            "name": "voters",
            "nameLocation": "649:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 318,
            "src": "616:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$12_storage_$",
              "typeString": "mapping(address => struct Ballot.Voter)"
            },
            "typeName": {
              "id": 21,
              "keyType": {
                "id": 18,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "624:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "616:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$12_storage_$",
                "typeString": "mapping(address => struct Ballot.Voter)"
              },
              "valueType": {
                "id": 20,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 19,
                  "name": "Voter",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12,
                  "src": "635:5:0"
                },
                "referencedDeclaration": 12,
                "src": "635:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                  "typeString": "struct Ballot.Voter"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "013cf08b",
            "id": 26,
            "mutability": "mutable",
            "name": "proposals",
            "nameLocation": "680:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 318,
            "src": "662:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Proposal_$17_storage_$dyn_storage",
              "typeString": "struct Ballot.Proposal[]"
            },
            "typeName": {
              "baseType": {
                "id": 24,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 23,
                  "name": "Proposal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17,
                  "src": "662:8:0"
                },
                "referencedDeclaration": 17,
                "src": "662:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Proposal_$17_storage_ptr",
                  "typeString": "struct Ballot.Proposal"
                }
              },
              "id": 25,
              "nodeType": "ArrayTypeName",
              "src": "662:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Proposal_$17_storage_$dyn_storage_ptr",
                "typeString": "struct Ballot.Proposal[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 68,
              "nodeType": "Block",
              "src": "739:229:0",
              "statements": [
                {
                  "expression": {
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32,
                      "name": "chairperson",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "749:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 33,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "763:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 34,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "763:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "749:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 36,
                  "nodeType": "ExpressionStatement",
                  "src": "749:24:0"
                },
                {
                  "expression": {
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 37,
                          "name": "voters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "783:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$12_storage_$",
                            "typeString": "mapping(address => struct Ballot.Voter storage ref)"
                          }
                        },
                        "id": 39,
                        "indexExpression": {
                          "id": 38,
                          "name": "chairperson",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "790:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "783:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$12_storage",
                          "typeString": "struct Ballot.Voter storage ref"
                        }
                      },
                      "id": 40,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "weight",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "783:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 41,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "812:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "783:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "783:30:0"
                },
                {
                  "body": {
                    "id": 66,
                    "nodeType": "Block",
                    "src": "874:88:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 59,
                                    "name": "proposalName",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 29,
                                    "src": "919:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                      "typeString": "bytes32[] memory"
                                    }
                                  },
                                  "id": 61,
                                  "indexExpression": {
                                    "id": 60,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45,
                                    "src": "932:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "919:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 62,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "947:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 58,
                                "name": "Proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17,
                                "src": "903:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Proposal_$17_storage_ptr_$",
                                  "typeString": "type(struct Ballot.Proposal storage pointer)"
                                }
                              },
                              "id": 63,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [
                                "name",
                                "voteCount"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "903:47:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$17_memory_ptr",
                                "typeString": "struct Ballot.Proposal memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Proposal_$17_memory_ptr",
                                "typeString": "struct Ballot.Proposal memory"
                              }
                            ],
                            "expression": {
                              "id": 55,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "888:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Proposal_$17_storage_$dyn_storage",
                                "typeString": "struct Ballot.Proposal storage ref[] storage ref"
                              }
                            },
                            "id": 57,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "888:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Proposal_$17_storage_$dyn_storage_ptr_$_t_struct$_Proposal_$17_storage_$returns$__$bound_to$_t_array$_t_struct$_Proposal_$17_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct Ballot.Proposal storage ref[] storage pointer,struct Ballot.Proposal storage ref)"
                            }
                          },
                          "id": 64,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "888:63:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 65,
                        "nodeType": "ExpressionStatement",
                        "src": "888:63:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 48,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "844:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 49,
                        "name": "proposalName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "848:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 50,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "848:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "844:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67,
                  "initializationExpression": {
                    "assignments": [
                      45
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 45,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "837:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "829:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 44,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "829:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 47,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 46,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "841:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "829:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 53,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "869:3:0",
                      "subExpression": {
                        "id": 52,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "869:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 54,
                    "nodeType": "ExpressionStatement",
                    "src": "869:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "824:138:0"
                }
              ]
            },
            "id": 69,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "mutability": "mutable",
                  "name": "proposalName",
                  "nameLocation": "725:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "708:29:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 27,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "708:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 28,
                    "nodeType": "ArrayTypeName",
                    "src": "708:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "707:31:0"
            },
            "returnParameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "739:0:0"
            },
            "scope": 318,
            "src": "696:272:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 108,
              "nodeType": "Block",
              "src": "1024:358:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 75,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1055:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 76,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1055:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 77,
                          "name": "chairperson",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "1069:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1055:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206368616972706572736f6e2063616e2061737369676e2072696768747320746f20766f7465",
                        "id": 79,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1094:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_47ee86e55525411e3cdb58d46ed2623822774b359fd4c4aaad747dcbaf468d9e",
                          "typeString": "literal_string \"Only chairperson can assign rights to vote\""
                        },
                        "value": "Only chairperson can assign rights to vote"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_47ee86e55525411e3cdb58d46ed2623822774b359fd4c4aaad747dcbaf468d9e",
                          "typeString": "literal_string \"Only chairperson can assign rights to vote\""
                        }
                      ],
                      "id": 74,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1034:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1034:114:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "1034:114:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1166:21:0",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 83,
                              "name": "voters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22,
                              "src": "1167:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$12_storage_$",
                                "typeString": "mapping(address => struct Ballot.Voter storage ref)"
                              }
                            },
                            "id": 85,
                            "indexExpression": {
                              "id": 84,
                              "name": "_voter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71,
                              "src": "1174:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1167:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$12_storage",
                              "typeString": "struct Ballot.Voter storage ref"
                            }
                          },
                          "id": 86,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "voted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11,
                          "src": "1167:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520766f7465722068617320616c726561647920766f7465642e",
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1189:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4bb515728ee3887febebac3eead6b20f31a77be8835ec34926209d3d5d42a40c",
                          "typeString": "literal_string \"The voter has already voted.\""
                        },
                        "value": "The voter has already voted."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4bb515728ee3887febebac3eead6b20f31a77be8835ec34926209d3d5d42a40c",
                          "typeString": "literal_string \"The voter has already voted.\""
                        }
                      ],
                      "id": 82,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1158:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1158:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "1158:62:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 92,
                              "name": "voters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22,
                              "src": "1251:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$12_storage_$",
                                "typeString": "mapping(address => struct Ballot.Voter storage ref)"
                              }
                            },
                            "id": 94,
                            "indexExpression": {
                              "id": 93,
                              "name": "_voter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71,
                              "src": "1258:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1251:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$12_storage",
                              "typeString": "struct Ballot.Voter storage ref"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "weight",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9,
                          "src": "1251:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 96,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1276:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1251:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f74657220616c7265616479206861732074686520726967687420746f20766f74652e",
                        "id": 98,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1291:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9b13e0d3ac0e0447e4c46115a2076d0b77d4990b97f6ad1e7c1b2f288e6675c7",
                          "typeString": "literal_string \"Voter already has the right to vote.\""
                        },
                        "value": "Voter already has the right to vote."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9b13e0d3ac0e0447e4c46115a2076d0b77d4990b97f6ad1e7c1b2f288e6675c7",
                          "typeString": "literal_string \"Voter already has the right to vote.\""
                        }
                      ],
                      "id": 91,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1230:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1230:109:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "1230:109:0"
                },
                {
                  "expression": {
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 101,
                          "name": "voters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "1350:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$12_storage_$",
                            "typeString": "mapping(address => struct Ballot.Voter storage ref)"
                          }
                        },
                        "id": 103,
                        "indexExpression": {
                          "id": 102,
                          "name": "_voter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71,
                          "src": "1357:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1350:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$12_storage",
                          "typeString": "struct Ballot.Voter storage ref"
                        }
                      },
                      "id": 104,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "weight",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "1350:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1374:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1350:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "1350:25:0"
                }
              ]
            },
            "functionSelector": "9e7b8d61",
            "id": 109,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "giveRightToVote",
            "nameLocation": "983:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "mutability": "mutable",
                  "name": "_voter",
                  "nameLocation": "1007:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "999:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "999:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "998:16:0"
            },
            "returnParameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1024:0:0"
            },
            "scope": 318,
            "src": "974:408:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 211,
              "nodeType": "Block",
              "src": "1428:693:0",
              "statements": [
                {
                  "assignments": [
                    116
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 116,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "1452:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 211,
                      "src": "1438:20:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                        "typeString": "struct Ballot.Voter"
                      },
                      "typeName": {
                        "id": 115,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 114,
                          "name": "Voter",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12,
                          "src": "1438:5:0"
                        },
                        "referencedDeclaration": 12,
                        "src": "1438:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                          "typeString": "struct Ballot.Voter"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 121,
                  "initialValue": {
                    "baseExpression": {
                      "id": 117,
                      "name": "voters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "1461:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$12_storage_$",
                        "typeString": "mapping(address => struct Ballot.Voter storage ref)"
                      }
                    },
                    "id": 120,
                    "indexExpression": {
                      "expression": {
                        "id": 118,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1468:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1468:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1461:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Voter_$12_storage",
                      "typeString": "struct Ballot.Voter storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1438:41:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1497:13:0",
                        "subExpression": {
                          "expression": {
                            "id": 123,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116,
                            "src": "1498:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                              "typeString": "struct Ballot.Voter storage pointer"
                            }
                          },
                          "id": 124,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "voted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11,
                          "src": "1498:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520616c726561647920766f7465642e2043616e6e6f742064656c65676174652e",
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1512:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_97708473839a9132007d1ee029103e51dda25325f961dfd6049fcbbb820a32e6",
                          "typeString": "literal_string \"You already voted. Cannot delegate.\""
                        },
                        "value": "You already voted. Cannot delegate."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_97708473839a9132007d1ee029103e51dda25325f961dfd6049fcbbb820a32e6",
                          "typeString": "literal_string \"You already voted. Cannot delegate.\""
                        }
                      ],
                      "id": 122,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1489:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1489:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "1489:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 130,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1568:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1568:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 132,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 111,
                          "src": "1582:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1568:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e6e6f742064656c656761746520746f20796f757273656c662e",
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1587:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0cb6acbbd186a70986861a32c50feced0f284a2cc6c498fa72e5036d8cf95cb5",
                          "typeString": "literal_string \"You cannot delegate to yourself.\""
                        },
                        "value": "You cannot delegate to yourself."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0cb6acbbd186a70986861a32c50feced0f284a2cc6c498fa72e5036d8cf95cb5",
                          "typeString": "literal_string \"You cannot delegate to yourself.\""
                        }
                      ],
                      "id": 129,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1560:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1560:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "1560:62:0"
                },
                {
                  "body": {
                    "id": 161,
                    "nodeType": "Block",
                    "src": "1675:120:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 146,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 111,
                            "src": "1689:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 147,
                                "name": "voters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22,
                                "src": "1695:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$12_storage_$",
                                  "typeString": "mapping(address => struct Ballot.Voter storage ref)"
                                }
                              },
                              "id": 149,
                              "indexExpression": {
                                "id": 148,
                                "name": "_to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 111,
                                "src": "1702:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1695:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Voter_$12_storage",
                                "typeString": "struct Ballot.Voter storage ref"
                              }
                            },
                            "id": 150,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "delegate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5,
                            "src": "1695:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1689:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 152,
                        "nodeType": "ExpressionStatement",
                        "src": "1689:26:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 157,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 154,
                                "name": "_to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 111,
                                "src": "1738:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "expression": {
                                  "id": 155,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1745:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 156,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1745:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1738:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "466f756e64206c6f6f7020696e2064656c65676174696f6e",
                              "id": 158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1757:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ddedf7119a73df26b87aea9569ba7e38b10fd306975137a694f09196bfbebf4a",
                                "typeString": "literal_string \"Found loop in delegation\""
                              },
                              "value": "Found loop in delegation"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ddedf7119a73df26b87aea9569ba7e38b10fd306975137a694f09196bfbebf4a",
                                "typeString": "literal_string \"Found loop in delegation\""
                              }
                            ],
                            "id": 153,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1730:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1730:54:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 160,
                        "nodeType": "ExpressionStatement",
                        "src": "1730:54:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 137,
                          "name": "voters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "1639:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$12_storage_$",
                            "typeString": "mapping(address => struct Ballot.Voter storage ref)"
                          }
                        },
                        "id": 139,
                        "indexExpression": {
                          "id": 138,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 111,
                          "src": "1646:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1639:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$12_storage",
                          "typeString": "struct Ballot.Voter storage ref"
                        }
                      },
                      "id": 140,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5,
                      "src": "1639:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1671:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1663:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 141,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1663:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1663:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1639:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 162,
                  "nodeType": "WhileStatement",
                  "src": "1632:163:0"
                },
                {
                  "assignments": [
                    165
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 165,
                      "mutability": "mutable",
                      "name": "delegate_",
                      "nameLocation": "1819:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 211,
                      "src": "1805:23:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                        "typeString": "struct Ballot.Voter"
                      },
                      "typeName": {
                        "id": 164,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 163,
                          "name": "Voter",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12,
                          "src": "1805:5:0"
                        },
                        "referencedDeclaration": 12,
                        "src": "1805:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                          "typeString": "struct Ballot.Voter"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 169,
                  "initialValue": {
                    "baseExpression": {
                      "id": 166,
                      "name": "voters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "1831:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$12_storage_$",
                        "typeString": "mapping(address => struct Ballot.Voter storage ref)"
                      }
                    },
                    "id": 168,
                    "indexExpression": {
                      "id": 167,
                      "name": "_to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "1838:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1831:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Voter_$12_storage",
                      "typeString": "struct Ballot.Voter storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1805:37:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 171,
                            "name": "delegate_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 165,
                            "src": "1861:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                              "typeString": "struct Ballot.Voter storage pointer"
                            }
                          },
                          "id": 172,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "weight",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9,
                          "src": "1861:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1880:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1861:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 170,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1853:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1853:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "1853:29:0"
                },
                {
                  "expression": {
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 177,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "1892:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                          "typeString": "struct Ballot.Voter storage pointer"
                        }
                      },
                      "id": 179,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "voted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "1892:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1907:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1892:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 182,
                  "nodeType": "ExpressionStatement",
                  "src": "1892:19:0"
                },
                {
                  "expression": {
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 183,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "1921:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                          "typeString": "struct Ballot.Voter storage pointer"
                        }
                      },
                      "id": 185,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "delegate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5,
                      "src": "1921:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 186,
                      "name": "_to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "1939:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1921:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 188,
                  "nodeType": "ExpressionStatement",
                  "src": "1921:21:0"
                },
                {
                  "condition": {
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1956:16:0",
                    "subExpression": {
                      "expression": {
                        "id": 189,
                        "name": "delegate_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 165,
                        "src": "1957:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                          "typeString": "struct Ballot.Voter storage pointer"
                        }
                      },
                      "id": 190,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "voted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "1957:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 209,
                    "nodeType": "Block",
                    "src": "2038:77:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 200,
                                "name": "proposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26,
                                "src": "2052:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Proposal_$17_storage_$dyn_storage",
                                  "typeString": "struct Ballot.Proposal storage ref[] storage ref"
                                }
                              },
                              "id": 203,
                              "indexExpression": {
                                "expression": {
                                  "id": 201,
                                  "name": "delegate_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 165,
                                  "src": "2062:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                                    "typeString": "struct Ballot.Voter storage pointer"
                                  }
                                },
                                "id": 202,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "vote",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7,
                                "src": "2062:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2052:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$17_storage",
                                "typeString": "struct Ballot.Proposal storage ref"
                              }
                            },
                            "id": 204,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "voteCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16,
                            "src": "2052:35:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 205,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 116,
                              "src": "2091:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                                "typeString": "struct Ballot.Voter storage pointer"
                              }
                            },
                            "id": 206,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "weight",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9,
                            "src": "2091:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2052:52:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 208,
                        "nodeType": "ExpressionStatement",
                        "src": "2052:52:0"
                      }
                    ]
                  },
                  "id": 210,
                  "nodeType": "IfStatement",
                  "src": "1952:163:0",
                  "trueBody": {
                    "id": 199,
                    "nodeType": "Block",
                    "src": "1974:58:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 192,
                              "name": "delegate_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 165,
                              "src": "1988:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                                "typeString": "struct Ballot.Voter storage pointer"
                              }
                            },
                            "id": 194,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "weight",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9,
                            "src": "1988:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 195,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 116,
                              "src": "2008:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                                "typeString": "struct Ballot.Voter storage pointer"
                              }
                            },
                            "id": 196,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "weight",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9,
                            "src": "2008:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1988:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 198,
                        "nodeType": "ExpressionStatement",
                        "src": "1988:33:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "5c19a95c",
            "id": 212,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegate",
            "nameLocation": "1397:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1414:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "1406:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1406:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1405:13:0"
            },
            "returnParameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1428:0:0"
            },
            "scope": 318,
            "src": "1388:733:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 260,
              "nodeType": "Block",
              "src": "2169:289:0",
              "statements": [
                {
                  "assignments": [
                    219
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 219,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "2193:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 260,
                      "src": "2179:20:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                        "typeString": "struct Ballot.Voter"
                      },
                      "typeName": {
                        "id": 218,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 217,
                          "name": "Voter",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12,
                          "src": "2179:5:0"
                        },
                        "referencedDeclaration": 12,
                        "src": "2179:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                          "typeString": "struct Ballot.Voter"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 224,
                  "initialValue": {
                    "baseExpression": {
                      "id": 220,
                      "name": "voters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "2202:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$12_storage_$",
                        "typeString": "mapping(address => struct Ballot.Voter storage ref)"
                      }
                    },
                    "id": 223,
                    "indexExpression": {
                      "expression": {
                        "id": 221,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2209:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2209:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2202:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Voter_$12_storage",
                      "typeString": "struct Ballot.Voter storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2179:41:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 226,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 219,
                            "src": "2238:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                              "typeString": "struct Ballot.Voter storage pointer"
                            }
                          },
                          "id": 227,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "weight",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9,
                          "src": "2238:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2254:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2238:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2072696768747320746f20766f7465",
                        "id": 230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2257:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_90bfcd449198e6402a66d6038268e829d20cb1036f04a86ad7eb94de1035a4cf",
                          "typeString": "literal_string \"No rights to vote\""
                        },
                        "value": "No rights to vote"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_90bfcd449198e6402a66d6038268e829d20cb1036f04a86ad7eb94de1035a4cf",
                          "typeString": "literal_string \"No rights to vote\""
                        }
                      ],
                      "id": 225,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2230:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2230:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "2230:47:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2295:13:0",
                        "subExpression": {
                          "expression": {
                            "id": 234,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 219,
                            "src": "2296:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                              "typeString": "struct Ballot.Voter storage pointer"
                            }
                          },
                          "id": 235,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "voted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11,
                          "src": "2296:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520616c726561647920766f746564",
                        "id": 237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2310:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4a367851a0c771da96dc9bf474920e21eeb850dad602a0bb6473f03632e01258",
                          "typeString": "literal_string \"You already voted\""
                        },
                        "value": "You already voted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4a367851a0c771da96dc9bf474920e21eeb850dad602a0bb6473f03632e01258",
                          "typeString": "literal_string \"You already voted\""
                        }
                      ],
                      "id": 233,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2287:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2287:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 239,
                  "nodeType": "ExpressionStatement",
                  "src": "2287:43:0"
                },
                {
                  "expression": {
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 240,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 219,
                        "src": "2341:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                          "typeString": "struct Ballot.Voter storage pointer"
                        }
                      },
                      "id": 242,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "vote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "2341:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 243,
                      "name": "_proposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 214,
                      "src": "2355:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2341:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 245,
                  "nodeType": "ExpressionStatement",
                  "src": "2341:23:0"
                },
                {
                  "expression": {
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 246,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 219,
                        "src": "2374:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                          "typeString": "struct Ballot.Voter storage pointer"
                        }
                      },
                      "id": 248,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "voted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "2374:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2389:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2374:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 251,
                  "nodeType": "ExpressionStatement",
                  "src": "2374:19:0"
                },
                {
                  "expression": {
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 252,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "2404:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Proposal_$17_storage_$dyn_storage",
                            "typeString": "struct Ballot.Proposal storage ref[] storage ref"
                          }
                        },
                        "id": 254,
                        "indexExpression": {
                          "id": 253,
                          "name": "_proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 214,
                          "src": "2414:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2404:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$17_storage",
                          "typeString": "struct Ballot.Proposal storage ref"
                        }
                      },
                      "id": 255,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "voteCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16,
                      "src": "2404:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 256,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 219,
                        "src": "2438:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                          "typeString": "struct Ballot.Voter storage pointer"
                        }
                      },
                      "id": 257,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "weight",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "2438:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2404:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 259,
                  "nodeType": "ExpressionStatement",
                  "src": "2404:47:0"
                }
              ]
            },
            "functionSelector": "0121b93f",
            "id": 261,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nameLocation": "2136:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 214,
                  "mutability": "mutable",
                  "name": "_proposal",
                  "nameLocation": "2149:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 261,
                  "src": "2141:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2141:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2140:19:0"
            },
            "returnParameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2169:0:0"
            },
            "scope": 318,
            "src": "2127:331:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 302,
              "nodeType": "Block",
              "src": "2538:285:0",
              "statements": [
                {
                  "assignments": [
                    267
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 267,
                      "mutability": "mutable",
                      "name": "winningVoteCount",
                      "nameLocation": "2556:16:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 302,
                      "src": "2548:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 266,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2548:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 269,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2575:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2548:28:0"
                },
                {
                  "body": {
                    "id": 300,
                    "nodeType": "Block",
                    "src": "2634:183:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 281,
                                "name": "proposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26,
                                "src": "2652:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Proposal_$17_storage_$dyn_storage",
                                  "typeString": "struct Ballot.Proposal storage ref[] storage ref"
                                }
                              },
                              "id": 283,
                              "indexExpression": {
                                "id": 282,
                                "name": "p",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 271,
                                "src": "2662:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2652:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$17_storage",
                                "typeString": "struct Ballot.Proposal storage ref"
                              }
                            },
                            "id": 284,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "voteCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16,
                            "src": "2652:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 285,
                            "name": "winningVoteCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 267,
                            "src": "2677:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2652:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 299,
                        "nodeType": "IfStatement",
                        "src": "2648:159:0",
                        "trueBody": {
                          "id": 298,
                          "nodeType": "Block",
                          "src": "2695:112:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 292,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 287,
                                  "name": "winningVoteCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 267,
                                  "src": "2713:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 288,
                                      "name": "proposals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 26,
                                      "src": "2732:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Proposal_$17_storage_$dyn_storage",
                                        "typeString": "struct Ballot.Proposal storage ref[] storage ref"
                                      }
                                    },
                                    "id": 290,
                                    "indexExpression": {
                                      "id": 289,
                                      "name": "p",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 271,
                                      "src": "2742:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2732:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proposal_$17_storage",
                                      "typeString": "struct Ballot.Proposal storage ref"
                                    }
                                  },
                                  "id": 291,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "voteCount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 16,
                                  "src": "2732:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2713:41:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 293,
                              "nodeType": "ExpressionStatement",
                              "src": "2713:41:0"
                            },
                            {
                              "expression": {
                                "id": 296,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 294,
                                  "name": "winningProposal_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 264,
                                  "src": "2772:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 295,
                                  "name": "p",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 271,
                                  "src": "2791:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2772:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 297,
                              "nodeType": "ExpressionStatement",
                              "src": "2772:20:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 274,
                      "name": "p",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 271,
                      "src": "2607:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 275,
                        "name": "proposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "2611:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Proposal_$17_storage_$dyn_storage",
                          "typeString": "struct Ballot.Proposal storage ref[] storage ref"
                        }
                      },
                      "id": 276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2611:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2607:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 301,
                  "initializationExpression": {
                    "assignments": [
                      271
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 271,
                        "mutability": "mutable",
                        "name": "p",
                        "nameLocation": "2600:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 301,
                        "src": "2592:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 270,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2592:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 273,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2604:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2592:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2629:3:0",
                      "subExpression": {
                        "id": 278,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 271,
                        "src": "2629:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 280,
                    "nodeType": "ExpressionStatement",
                    "src": "2629:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "2587:230:0"
                }
              ]
            },
            "functionSelector": "609ff1bd",
            "id": 303,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "winningProposal",
            "nameLocation": "2473:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 262,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2488:2:0"
            },
            "returnParameters": {
              "id": 265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 264,
                  "mutability": "mutable",
                  "name": "winningProposal_",
                  "nameLocation": "2520:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 303,
                  "src": "2512:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 263,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2512:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2511:26:0"
            },
            "scope": 318,
            "src": "2464:359:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 316,
              "nodeType": "Block",
              "src": "2895:64:0",
              "statements": [
                {
                  "expression": {
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 308,
                      "name": "winnerName_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 306,
                      "src": "2905:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 309,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "2919:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Proposal_$17_storage_$dyn_storage",
                            "typeString": "struct Ballot.Proposal storage ref[] storage ref"
                          }
                        },
                        "id": 312,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 310,
                            "name": "winningProposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 303,
                            "src": "2929:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2929:17:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2919:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$17_storage",
                          "typeString": "struct Ballot.Proposal storage ref"
                        }
                      },
                      "id": 313,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14,
                      "src": "2919:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2905:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 315,
                  "nodeType": "ExpressionStatement",
                  "src": "2905:47:0"
                }
              ]
            },
            "functionSelector": "e2ba53f0",
            "id": 317,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "winnerName",
            "nameLocation": "2838:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2848:2:0"
            },
            "returnParameters": {
              "id": 307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 306,
                  "mutability": "mutable",
                  "name": "winnerName_",
                  "nameLocation": "2882:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 317,
                  "src": "2874:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 305,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2874:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2873:21:0"
            },
            "scope": 318,
            "src": "2829:130:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 319,
        "src": "66:2895:0",
        "usedErrors": []
      }
    ],
    "src": "32:2930:0"
  },
  "bytecode": "608060405234801561001057600080fd5b506040516109e73803806109e783398101604081905261002f916100e5565b600080546001600160a01b03191633908117825581526001602081905260408220600201555b81518110156100c8576002604051806040016040528084848151811061007d5761007d6101a2565b602090810291909101810151825260009181018290528354600181810186559483529181902083516002909302019182559190910151910155806100c0816101b8565b915050610055565b50506101e1565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156100f857600080fd5b82516001600160401b038082111561010f57600080fd5b818501915085601f83011261012357600080fd5b815181811115610135576101356100cf565b8060051b604051601f19603f8301168101818110858211171561015a5761015a6100cf565b60405291825284820192508381018501918883111561017857600080fd5b938501935b828510156101965784518452938501939285019261017d565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b60006000198214156101da57634e487b7160e01b600052601160045260246000fd5b5060010190565b6107f7806101f06000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063609ff1bd1161005b578063609ff1bd1461010d5780639e7b8d6114610123578063a3ec138d14610136578063e2ba53f0146101a757600080fd5b80630121b93f1461008d578063013cf08b146100a25780632e4176cf146100cf5780635c19a95c146100fa575b600080fd5b6100a061009b366004610719565b6101af565b005b6100b56100b0366004610719565b6102ac565b604080519283526020830191909152015b60405180910390f35b6000546100e2906001600160a01b031681565b6040516001600160a01b0390911681526020016100c6565b6100a0610108366004610732565b6102da565b6101156104fb565b6040519081526020016100c6565b6100a0610131366004610732565b610578565b61017b610144366004610732565b600160208190526000918252604090912080549181015460028201546003909201546001600160a01b039093169290919060ff1684565b604080516001600160a01b039095168552602085019390935291830152151560608201526080016100c6565b6101156106e6565b33600090815260016020526040902060028101546102085760405162461bcd60e51b81526020600482015260116024820152704e6f2072696768747320746f20766f746560781b60448201526064015b60405180910390fd5b600381015460ff16156102515760405162461bcd60e51b8152602060048201526011602482015270165bdd48185b1c9958591e481d9bdd1959607a1b60448201526064016101ff565b600180820183905560038201805460ff1916909117905560028082015481549091908490811061028357610283610762565b906000526020600020906002020160010160008282546102a3919061078e565b90915550505050565b600281815481106102bc57600080fd5b60009182526020909120600290910201805460019091015490915082565b336000908152600160205260409020600381015460ff161561034a5760405162461bcd60e51b815260206004820152602360248201527f596f7520616c726561647920766f7465642e2043616e6e6f742064656c6567616044820152623a329760e91b60648201526084016101ff565b336001600160a01b03831614156103a35760405162461bcd60e51b815260206004820181905260248201527f596f752063616e6e6f742064656c656761746520746f20796f757273656c662e60448201526064016101ff565b6001600160a01b038281166000908152600160205260409020541615610436576001600160a01b0391821660009081526001602052604090205490911690338214156104315760405162461bcd60e51b815260206004820152601860248201527f466f756e64206c6f6f7020696e2064656c65676174696f6e000000000000000060448201526064016101ff565b6103a3565b6001600160a01b0382166000908152600160205260409020600281015461045c57600080fd5b6003808301805460ff1916600117905582546001600160a01b0385166001600160a01b031990911617835581015460ff166104b45781600201548160020160008282546104a9919061078e565b909155506104f69050565b816002015460028260010154815481106104d0576104d0610762565b906000526020600020906002020160010160008282546104f0919061078e565b90915550505b505050565b600080805b60025481101561057357816002828154811061051e5761051e610762565b9060005260206000209060020201600101541115610561576002818154811061054957610549610762565b90600052602060002090600202016001015491508092505b8061056b816107a6565b915050610500565b505090565b6000546001600160a01b031633146105e55760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79206368616972706572736f6e2063616e2061737369676e2072696768604482015269747320746f20766f746560b01b60648201526084016101ff565b6001600160a01b03811660009081526001602052604090206003015460ff16156106515760405162461bcd60e51b815260206004820152601c60248201527f54686520766f7465722068617320616c726561647920766f7465642e0000000060448201526064016101ff565b6001600160a01b038116600090815260016020526040902060020154156106c65760405162461bcd60e51b8152602060048201526024808201527f566f74657220616c7265616479206861732074686520726967687420746f207660448201526337ba329760e11b60648201526084016101ff565b6001600160a01b0316600090815260016020819052604090912060020155565b600060026106f26104fb565b8154811061070257610702610762565b906000526020600020906002020160000154905090565b60006020828403121561072b57600080fd5b5035919050565b60006020828403121561074457600080fd5b81356001600160a01b038116811461075b57600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156107a1576107a1610778565b500190565b60006000198214156107ba576107ba610778565b506001019056fea264697066735822122056bf1ff98d4d2828ace1252c7f6cfbc900cf56517d999a115b3e389a96f925db64736f6c634300080c0033",
  "bytecodeSha1": "d0a770dca1a073f2add86512ceda931ccb148095",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "Ballot",
  "coverageMap": {
    "branches": {
      "0": {
        "Ballot.delegate": {
          "23": [
            1497,
            1510,
            true
          ],
          "24": [
            1568,
            1585,
            true
          ],
          "25": [
            1738,
            1755,
            true
          ],
          "26": [
            1957,
            1972,
            false
          ]
        },
        "Ballot.giveRightToVote": {
          "28": [
            1055,
            1080,
            true
          ],
          "29": [
            1166,
            1187,
            true
          ],
          "30": [
            1251,
            1277,
            true
          ]
        },
        "Ballot.vote": {
          "22": [
            2295,
            2308,
            true
          ]
        },
        "Ballot.winningProposal": {
          "27": [
            2652,
            2693,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ballot.delegate": {
          "5": [
            1489,
            1550
          ],
          "6": [
            1560,
            1622
          ],
          "7": [
            1689,
            1715
          ],
          "8": [
            1730,
            1784
          ],
          "9": [
            1853,
            1882
          ],
          "10": [
            1892,
            1911
          ],
          "11": [
            1921,
            1942
          ],
          "12": [
            1988,
            2021
          ],
          "13": [
            2052,
            2104
          ]
        },
        "Ballot.giveRightToVote": {
          "17": [
            1034,
            1148
          ],
          "18": [
            1158,
            1220
          ],
          "19": [
            1230,
            1339
          ],
          "20": [
            1350,
            1375
          ]
        },
        "Ballot.vote": {
          "0": [
            2230,
            2277
          ],
          "1": [
            2287,
            2330
          ],
          "2": [
            2341,
            2364
          ],
          "3": [
            2374,
            2393
          ],
          "4": [
            2404,
            2451
          ]
        },
        "Ballot.winnerName": {
          "21": [
            2905,
            2952
          ]
        },
        "Ballot.winningProposal": {
          "14": [
            2713,
            2754
          ],
          "15": [
            2772,
            2792
          ],
          "16": [
            2629,
            2632
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100885760003560e01c8063609ff1bd1161005b578063609ff1bd1461010d5780639e7b8d6114610123578063a3ec138d14610136578063e2ba53f0146101a757600080fd5b80630121b93f1461008d578063013cf08b146100a25780632e4176cf146100cf5780635c19a95c146100fa575b600080fd5b6100a061009b366004610719565b6101af565b005b6100b56100b0366004610719565b6102ac565b604080519283526020830191909152015b60405180910390f35b6000546100e2906001600160a01b031681565b6040516001600160a01b0390911681526020016100c6565b6100a0610108366004610732565b6102da565b6101156104fb565b6040519081526020016100c6565b6100a0610131366004610732565b610578565b61017b610144366004610732565b600160208190526000918252604090912080549181015460028201546003909201546001600160a01b039093169290919060ff1684565b604080516001600160a01b039095168552602085019390935291830152151560608201526080016100c6565b6101156106e6565b33600090815260016020526040902060028101546102085760405162461bcd60e51b81526020600482015260116024820152704e6f2072696768747320746f20766f746560781b60448201526064015b60405180910390fd5b600381015460ff16156102515760405162461bcd60e51b8152602060048201526011602482015270165bdd48185b1c9958591e481d9bdd1959607a1b60448201526064016101ff565b600180820183905560038201805460ff1916909117905560028082015481549091908490811061028357610283610762565b906000526020600020906002020160010160008282546102a3919061078e565b90915550505050565b600281815481106102bc57600080fd5b60009182526020909120600290910201805460019091015490915082565b336000908152600160205260409020600381015460ff161561034a5760405162461bcd60e51b815260206004820152602360248201527f596f7520616c726561647920766f7465642e2043616e6e6f742064656c6567616044820152623a329760e91b60648201526084016101ff565b336001600160a01b03831614156103a35760405162461bcd60e51b815260206004820181905260248201527f596f752063616e6e6f742064656c656761746520746f20796f757273656c662e60448201526064016101ff565b6001600160a01b038281166000908152600160205260409020541615610436576001600160a01b0391821660009081526001602052604090205490911690338214156104315760405162461bcd60e51b815260206004820152601860248201527f466f756e64206c6f6f7020696e2064656c65676174696f6e000000000000000060448201526064016101ff565b6103a3565b6001600160a01b0382166000908152600160205260409020600281015461045c57600080fd5b6003808301805460ff1916600117905582546001600160a01b0385166001600160a01b031990911617835581015460ff166104b45781600201548160020160008282546104a9919061078e565b909155506104f69050565b816002015460028260010154815481106104d0576104d0610762565b906000526020600020906002020160010160008282546104f0919061078e565b90915550505b505050565b600080805b60025481101561057357816002828154811061051e5761051e610762565b9060005260206000209060020201600101541115610561576002818154811061054957610549610762565b90600052602060002090600202016001015491508092505b8061056b816107a6565b915050610500565b505090565b6000546001600160a01b031633146105e55760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79206368616972706572736f6e2063616e2061737369676e2072696768604482015269747320746f20766f746560b01b60648201526084016101ff565b6001600160a01b03811660009081526001602052604090206003015460ff16156106515760405162461bcd60e51b815260206004820152601c60248201527f54686520766f7465722068617320616c726561647920766f7465642e0000000060448201526064016101ff565b6001600160a01b038116600090815260016020526040902060020154156106c65760405162461bcd60e51b8152602060048201526024808201527f566f74657220616c7265616479206861732074686520726967687420746f207660448201526337ba329760e11b60648201526084016101ff565b6001600160a01b0316600090815260016020819052604090912060020155565b600060026106f26104fb565b8154811061070257610702610762565b906000526020600020906002020160000154905090565b60006020828403121561072b57600080fd5b5035919050565b60006020828403121561074457600080fd5b81356001600160a01b038116811461075b57600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156107a1576107a1610778565b500190565b60006000198214156107ba576107ba610778565b506001019056fea264697066735822122056bf1ff98d4d2828ace1252c7f6cfbc900cf56517d999a115b3e389a96f925db64736f6c634300080c0033",
  "deployedSourceMap": "66:2895:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2127:331;;;;;;:::i;:::-;;:::i;:::-;;662:27;;;;;;:::i;:::-;;:::i;:::-;;;;373:25:1;;;429:2;414:18;;407:34;;;;346:18;662:27:0;;;;;;;;103:26;;;;;-1:-1:-1;;;;;103:26:0;;;;;;-1:-1:-1;;;;;616:32:1;;;598:51;;586:2;571:18;103:26:0;452:203:1;1388:733:0;;;;;;:::i;:::-;;:::i;2464:359::-;;;:::i;:::-;;;1097:25:1;;;1085:2;1070:18;2464:359:0;951:177:1;974:408:0;;;;;;:::i;:::-;;:::i;616:39::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;616:39:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;1376:32:1;;;1358:51;;1440:2;1425:18;;1418:34;;;;1468:18;;;1461:34;1538:14;1531:22;1526:2;1511:18;;1504:50;1345:3;1330:19;616:39:0;1133:427:1;2829:130:0;;;:::i;2127:331::-;2209:10;2179:20;2202:18;;;:6;:18;;;;;2238:13;;;;2230:47;;;;-1:-1:-1;;;2230:47:0;;1949:2:1;2230:47:0;;;1931:21:1;1988:2;1968:18;;;1961:30;-1:-1:-1;;;2007:18:1;;;2000:47;2064:18;;2230:47:0;;;;;;;;;2296:12;;;;;;2295:13;2287:43;;;;-1:-1:-1;;;2287:43:0;;2295:2:1;2287:43:0;;;2277:21:1;2334:2;2314:18;;;2307:30;-1:-1:-1;;;2353:18:1;;;2346:47;2410:18;;2287:43:0;2093:341:1;2287:43:0;2341:11;;;;:23;;;2374:12;;;:19;;-1:-1:-1;;2374:19:0;;;;;;2438:13;;;;;2404:20;;2438:13;;;2355:9;;2404:20;;;;;;:::i;:::-;;;;;;;;;;;:30;;;:47;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;2127:331:0:o;662:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;662:27:0;:::o;1388:733::-;1468:10;1438:20;1461:18;;;:6;:18;;;;;1498:12;;;;;;1497:13;1489:61;;;;-1:-1:-1;;;1489:61:0;;3038:2:1;1489:61:0;;;3020:21:1;3077:2;3057:18;;;3050:30;3116:34;3096:18;;;3089:62;-1:-1:-1;;;3167:18:1;;;3160:33;3210:19;;1489:61:0;2836:399:1;1489:61:0;1568:10;-1:-1:-1;;;;;1568:17:0;;;;1560:62;;;;-1:-1:-1;;;1560:62:0;;3442:2:1;1560:62:0;;;3424:21:1;;;3461:18;;;3454:30;3520:34;3500:18;;;3493:62;3572:18;;1560:62:0;3240:356:1;1560:62:0;-1:-1:-1;;;;;1639:11:0;;;1671:1;1639:11;;;:6;:11;;;;;:20;;:34;1632:163;;-1:-1:-1;;;;;1695:11:0;;;;;;;:6;:11;;;;;:20;;;;;1745:10;1738:17;;;1730:54;;;;-1:-1:-1;;;1730:54:0;;3803:2:1;1730:54:0;;;3785:21:1;3842:2;3822:18;;;3815:30;3881:26;3861:18;;;3854:54;3925:18;;1730:54:0;3601:348:1;1730:54:0;1632:163;;;-1:-1:-1;;;;;1831:11:0;;1805:23;1831:11;;;:6;:11;;;;;1861:16;;;;1853:29;;;;;;1892:12;;;;:19;;-1:-1:-1;;1892:19:0;1907:4;1892:19;;;1921:21;;-1:-1:-1;;;;;1921:21:0;;-1:-1:-1;;;;;;1921:21:0;;;;;;1957:15;;;1892:19;1957:15;1952:163;;2008:6;:13;;;1988:9;:16;;;:33;;;;;;;:::i;:::-;;;;-1:-1:-1;1952:163:0;;-1:-1:-1;1952:163:0;;2091:6;:13;;;2052:9;2062;:14;;;2052:25;;;;;;;;:::i;:::-;;;;;;;;;;;:35;;;:52;;;;;;;:::i;:::-;;;;-1:-1:-1;;1952:163:0;1428:693;;1388:733;:::o;2464:359::-;2512:24;;;2587:230;2611:9;:16;2607:20;;2587:230;;;2677:16;2652:9;2662:1;2652:12;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;:41;2648:159;;;2732:9;2742:1;2732:12;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;2713:41;;2791:1;2772:20;;2648:159;2629:3;;;;:::i;:::-;;;;2587:230;;;;2538:285;2464:359;:::o;974:408::-;1069:11;;-1:-1:-1;;;;;1069:11:0;1055:10;:25;1034:114;;;;-1:-1:-1;;;1034:114:0;;4296:2:1;1034:114:0;;;4278:21:1;4335:2;4315:18;;;4308:30;4374:34;4354:18;;;4347:62;-1:-1:-1;;;4425:18:1;;;4418:40;4475:19;;1034:114:0;4094:406:1;1034:114:0;-1:-1:-1;;;;;1167:14:0;;;;;;:6;:14;;;;;:20;;;;;1166:21;1158:62;;;;-1:-1:-1;;;1158:62:0;;4707:2:1;1158:62:0;;;4689:21:1;4746:2;4726:18;;;4719:30;4785;4765:18;;;4758:58;4833:18;;1158:62:0;4505:352:1;1158:62:0;-1:-1:-1;;;;;1251:14:0;;;;;;:6;:14;;;;;:21;;;:26;1230:109;;;;-1:-1:-1;;;1230:109:0;;5064:2:1;1230:109:0;;;5046:21:1;5103:2;5083:18;;;5076:30;5142:34;5122:18;;;5115:62;-1:-1:-1;;;5193:18:1;;;5186:34;5237:19;;1230:109:0;4862:400:1;1230:109:0;-1:-1:-1;;;;;1350:14:0;;;;;1374:1;1350:14;;;;;;;;:21;;:25;974:408::o;2829:130::-;2874:19;2919:9;2929:17;:15;:17::i;:::-;2919:28;;;;;;;;:::i;:::-;;;;;;;;;;;:33;;;2905:47;;2829:130;:::o;14:180:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:1;;14:180;-1:-1:-1;14:180:1:o;660:286::-;719:6;772:2;760:9;751:7;747:23;743:32;740:52;;;788:1;785;778:12;740:52;814:23;;-1:-1:-1;;;;;866:31:1;;856:42;;846:70;;912:1;909;902:12;846:70;935:5;660:286;-1:-1:-1;;;660:286:1:o;2439:127::-;2500:10;2495:3;2491:20;2488:1;2481:31;2531:4;2528:1;2521:15;2555:4;2552:1;2545:15;2571:127;2632:10;2627:3;2623:20;2620:1;2613:31;2663:4;2660:1;2653:15;2687:4;2684:1;2677:15;2703:128;2743:3;2774:1;2770:6;2767:1;2764:13;2761:39;;;2780:18;;:::i;:::-;-1:-1:-1;2816:9:1;;2703:128::o;3954:135::-;3993:3;-1:-1:-1;;4014:17:1;;4011:43;;;4034:18;;:::i;:::-;-1:-1:-1;4081:1:1;4070:13;;3954:135::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    66,
    2961
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x609FF1BD GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x9E7B8D61 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0xE2BA53F0 EQ PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x121B93F EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x13CF08B EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x2E4176CF EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0xFA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x719 JUMP JUMPDEST PUSH2 0x1AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB5 PUSH2 0xB0 CALLDATASIZE PUSH1 0x4 PUSH2 0x719 JUMP JUMPDEST PUSH2 0x2AC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xE2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC6 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0x732 JUMP JUMPDEST PUSH2 0x2DA JUMP JUMPDEST PUSH2 0x115 PUSH2 0x4FB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC6 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x732 JUMP JUMPDEST PUSH2 0x578 JUMP JUMPDEST PUSH2 0x17B PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x732 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0xC6 JUMP JUMPDEST PUSH2 0x115 PUSH2 0x6E6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0x208 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4E6F2072696768747320746F20766F7465 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x251 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x165BDD48185B1C9958591E481D9BDD1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x1 DUP1 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 DUP3 ADD SLOAD DUP2 SLOAD SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x283 JUMPI PUSH2 0x283 PUSH2 0x762 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x78E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 POP DUP3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x34A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520616C726561647920766F7465642E2043616E6E6F742064656C656761 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x3A3297 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1FF JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0x3A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E6E6F742064656C656761746520746F20796F757273656C662E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x436 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 AND SWAP1 CALLER DUP3 EQ ISZERO PUSH2 0x431 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466F756E64206C6F6F7020696E2064656C65676174696F6E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0x45C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR DUP4 SSTORE DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x4B4 JUMPI DUP2 PUSH1 0x2 ADD SLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4A9 SWAP2 SWAP1 PUSH2 0x78E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x4F6 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x2 ADD SLOAD PUSH1 0x2 DUP3 PUSH1 0x1 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x4D0 JUMPI PUSH2 0x4D0 PUSH2 0x762 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0x78E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x573 JUMPI DUP2 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x51E JUMPI PUSH2 0x51E PUSH2 0x762 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x561 JUMPI PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x549 JUMPI PUSH2 0x549 PUSH2 0x762 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 PUSH2 0x56B DUP2 PUSH2 0x7A6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x500 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206368616972706572736F6E2063616E2061737369676E2072696768 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x747320746F20766F7465 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x651 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520766F7465722068617320616C726561647920766F7465642E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD ISZERO PUSH2 0x6C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x566F74657220616C7265616479206861732074686520726967687420746F2076 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x37BA3297 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 ADD SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x6F2 PUSH2 0x4FB JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x702 JUMPI PUSH2 0x702 PUSH2 0x762 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x72B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x744 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x75B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x7A1 JUMPI PUSH2 0x7A1 PUSH2 0x778 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x7BA JUMPI PUSH2 0x7BA PUSH2 0x778 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP 0xBF 0x1F 0xF9 DUP14 0x4D 0x28 0x28 0xAC 0xE1 0x25 0x2C PUSH32 0x6CFBC900CF56517D999A115B3E389A96F925DB64736F6C634300080C00330000 ",
  "pcMap": {
    "0": {
      "offset": [
        66,
        2961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x88"
    },
    "25": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x609FF1BD"
    },
    "38": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x609FF1BD"
    },
    "49": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10D"
    },
    "53": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9E7B8D61"
    },
    "60": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x123"
    },
    "64": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA3EC138D"
    },
    "71": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x136"
    },
    "75": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE2BA53F0"
    },
    "82": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A7"
    },
    "86": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "90": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "REVERT",
      "path": "0"
    },
    "91": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "92": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "93": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x121B93F"
    },
    "98": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "EQ",
      "path": "0"
    },
    "99": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8D"
    },
    "102": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "103": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "104": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x13CF08B"
    },
    "109": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "EQ",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA2"
    },
    "113": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2E4176CF"
    },
    "120": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCF"
    },
    "124": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5C19A95C"
    },
    "131": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFA"
    },
    "135": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "139": {
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "140": {
      "first_revert": true,
      "fn": null,
      "offset": [
        66,
        2961
      ],
      "op": "REVERT",
      "path": "0"
    },
    "141": {
      "fn": "Ballot.vote",
      "offset": [
        2127,
        2458
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "142": {
      "fn": "Ballot.vote",
      "offset": [
        2127,
        2458
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA0"
    },
    "145": {
      "fn": "Ballot.vote",
      "offset": [
        2127,
        2458
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B"
    },
    "148": {
      "fn": "Ballot.vote",
      "offset": [
        2127,
        2458
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "149": {
      "fn": "Ballot.vote",
      "offset": [
        2127,
        2458
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "151": {
      "fn": "Ballot.vote",
      "offset": [
        2127,
        2458
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x719"
    },
    "154": {
      "fn": "Ballot.vote",
      "jump": "i",
      "offset": [
        2127,
        2458
      ],
      "op": "JUMP",
      "path": "0"
    },
    "155": {
      "fn": "Ballot.vote",
      "offset": [
        2127,
        2458
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "156": {
      "fn": "Ballot.vote",
      "offset": [
        2127,
        2458
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AF"
    },
    "159": {
      "fn": "Ballot.vote",
      "jump": "i",
      "offset": [
        2127,
        2458
      ],
      "op": "JUMP",
      "path": "0"
    },
    "160": {
      "fn": "Ballot.vote",
      "offset": [
        2127,
        2458
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "161": {
      "fn": "Ballot.vote",
      "offset": [
        2127,
        2458
      ],
      "op": "STOP",
      "path": "0"
    },
    "162": {
      "offset": [
        662,
        689
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "163": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB5"
    },
    "166": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB0"
    },
    "169": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "170": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "172": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x719"
    },
    "175": {
      "fn": "Ballot.vote",
      "jump": "i",
      "offset": [
        662,
        689
      ],
      "op": "JUMP",
      "path": "0"
    },
    "176": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "177": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AC"
    },
    "180": {
      "fn": "Ballot.vote",
      "jump": "i",
      "offset": [
        662,
        689
      ],
      "op": "JUMP",
      "path": "0"
    },
    "181": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "182": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "184": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "DUP1",
      "path": "0"
    },
    "185": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "186": {
      "op": "SWAP3"
    },
    "187": {
      "op": "DUP4"
    },
    "188": {
      "op": "MSTORE"
    },
    "189": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "191": {
      "op": "DUP4"
    },
    "192": {
      "op": "ADD"
    },
    "193": {
      "op": "SWAP2"
    },
    "194": {
      "op": "SWAP1"
    },
    "195": {
      "op": "SWAP2"
    },
    "196": {
      "op": "MSTORE"
    },
    "197": {
      "op": "ADD"
    },
    "198": {
      "offset": [
        662,
        689
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "199": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "201": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "202": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "DUP1",
      "path": "0"
    },
    "203": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "204": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "SUB",
      "path": "0"
    },
    "205": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "206": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "RETURN",
      "path": "0"
    },
    "207": {
      "offset": [
        103,
        129
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "208": {
      "fn": "Ballot.vote",
      "offset": [
        103,
        129
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "210": {
      "fn": "Ballot.vote",
      "offset": [
        103,
        129
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "211": {
      "fn": "Ballot.vote",
      "offset": [
        103,
        129
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE2"
    },
    "214": {
      "fn": "Ballot.vote",
      "offset": [
        103,
        129
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "219": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "221": {
      "op": "SHL"
    },
    "222": {
      "op": "SUB"
    },
    "223": {
      "offset": [
        103,
        129
      ],
      "op": "AND",
      "path": "0"
    },
    "224": {
      "fn": "Ballot.vote",
      "offset": [
        103,
        129
      ],
      "op": "DUP2",
      "path": "0"
    },
    "225": {
      "fn": "Ballot.vote",
      "offset": [
        103,
        129
      ],
      "op": "JUMP",
      "path": "0"
    },
    "226": {
      "fn": "Ballot.vote",
      "offset": [
        103,
        129
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "227": {
      "fn": "Ballot.vote",
      "offset": [
        103,
        129
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "229": {
      "fn": "Ballot.vote",
      "offset": [
        103,
        129
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "234": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "236": {
      "op": "SHL"
    },
    "237": {
      "op": "SUB"
    },
    "238": {
      "op": "SWAP1"
    },
    "239": {
      "op": "SWAP2"
    },
    "240": {
      "op": "AND"
    },
    "241": {
      "op": "DUP2"
    },
    "242": {
      "op": "MSTORE"
    },
    "243": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "245": {
      "op": "ADD"
    },
    "246": {
      "offset": [
        103,
        129
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC6"
    },
    "249": {
      "op": "JUMP"
    },
    "250": {
      "fn": "Ballot.delegate",
      "offset": [
        1388,
        2121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "251": {
      "fn": "Ballot.delegate",
      "offset": [
        1388,
        2121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA0"
    },
    "254": {
      "fn": "Ballot.delegate",
      "offset": [
        1388,
        2121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x108"
    },
    "257": {
      "fn": "Ballot.delegate",
      "offset": [
        1388,
        2121
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "258": {
      "fn": "Ballot.delegate",
      "offset": [
        1388,
        2121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "260": {
      "fn": "Ballot.delegate",
      "offset": [
        1388,
        2121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x732"
    },
    "263": {
      "fn": "Ballot.delegate",
      "jump": "i",
      "offset": [
        1388,
        2121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "264": {
      "fn": "Ballot.delegate",
      "offset": [
        1388,
        2121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "265": {
      "fn": "Ballot.delegate",
      "offset": [
        1388,
        2121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DA"
    },
    "268": {
      "fn": "Ballot.delegate",
      "jump": "i",
      "offset": [
        1388,
        2121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "269": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2464,
        2823
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "270": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2464,
        2823
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x115"
    },
    "273": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2464,
        2823
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4FB"
    },
    "276": {
      "fn": "Ballot.winningProposal",
      "jump": "i",
      "offset": [
        2464,
        2823
      ],
      "op": "JUMP",
      "path": "0"
    },
    "277": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2464,
        2823
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "278": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2464,
        2823
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "280": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2464,
        2823
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "281": {
      "op": "SWAP1"
    },
    "282": {
      "op": "DUP2"
    },
    "283": {
      "op": "MSTORE"
    },
    "284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "286": {
      "op": "ADD"
    },
    "287": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2464,
        2823
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC6"
    },
    "290": {
      "op": "JUMP"
    },
    "291": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        974,
        1382
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "292": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        974,
        1382
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA0"
    },
    "295": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        974,
        1382
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x131"
    },
    "298": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        974,
        1382
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "299": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        974,
        1382
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "301": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        974,
        1382
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x732"
    },
    "304": {
      "fn": "Ballot.giveRightToVote",
      "jump": "i",
      "offset": [
        974,
        1382
      ],
      "op": "JUMP",
      "path": "0"
    },
    "305": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        974,
        1382
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "306": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        974,
        1382
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x578"
    },
    "309": {
      "fn": "Ballot.giveRightToVote",
      "jump": "i",
      "offset": [
        974,
        1382
      ],
      "op": "JUMP",
      "path": "0"
    },
    "310": {
      "offset": [
        616,
        655
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "311": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17B"
    },
    "314": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x144"
    },
    "317": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "318": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "320": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x732"
    },
    "323": {
      "fn": "Ballot.giveRightToVote",
      "jump": "i",
      "offset": [
        616,
        655
      ],
      "op": "JUMP",
      "path": "0"
    },
    "324": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "325": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "327": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "329": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "DUP2",
      "path": "0"
    },
    "330": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "331": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "332": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "334": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "335": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "DUP3",
      "path": "0"
    },
    "336": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "337": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "339": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "340": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "341": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "342": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "DUP1",
      "path": "0"
    },
    "343": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "344": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "345": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "DUP2",
      "path": "0"
    },
    "346": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "ADD",
      "path": "0"
    },
    "347": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "348": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "350": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "DUP3",
      "path": "0"
    },
    "351": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "ADD",
      "path": "0"
    },
    "352": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "353": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "355": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "356": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "357": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "ADD",
      "path": "0"
    },
    "358": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "363": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "365": {
      "op": "SHL"
    },
    "366": {
      "op": "SUB"
    },
    "367": {
      "offset": [
        616,
        655
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "368": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "369": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "AND",
      "path": "0"
    },
    "370": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "371": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "372": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "373": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "374": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "376": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "AND",
      "path": "0"
    },
    "377": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "DUP5",
      "path": "0"
    },
    "378": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "JUMP",
      "path": "0"
    },
    "379": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "380": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "382": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "DUP1",
      "path": "0"
    },
    "383": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        616,
        655
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "388": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "390": {
      "op": "SHL"
    },
    "391": {
      "op": "SUB"
    },
    "392": {
      "op": "SWAP1"
    },
    "393": {
      "op": "SWAP6"
    },
    "394": {
      "op": "AND"
    },
    "395": {
      "op": "DUP6"
    },
    "396": {
      "op": "MSTORE"
    },
    "397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "399": {
      "op": "DUP6"
    },
    "400": {
      "op": "ADD"
    },
    "401": {
      "op": "SWAP4"
    },
    "402": {
      "op": "SWAP1"
    },
    "403": {
      "op": "SWAP4"
    },
    "404": {
      "op": "MSTORE"
    },
    "405": {
      "op": "SWAP2"
    },
    "406": {
      "op": "DUP4"
    },
    "407": {
      "op": "ADD"
    },
    "408": {
      "op": "MSTORE"
    },
    "409": {
      "op": "ISZERO"
    },
    "410": {
      "op": "ISZERO"
    },
    "411": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "413": {
      "op": "DUP3"
    },
    "414": {
      "op": "ADD"
    },
    "415": {
      "op": "MSTORE"
    },
    "416": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "418": {
      "op": "ADD"
    },
    "419": {
      "offset": [
        616,
        655
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC6"
    },
    "422": {
      "op": "JUMP"
    },
    "423": {
      "fn": "Ballot.winnerName",
      "offset": [
        2829,
        2959
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "424": {
      "fn": "Ballot.winnerName",
      "offset": [
        2829,
        2959
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x115"
    },
    "427": {
      "fn": "Ballot.winnerName",
      "offset": [
        2829,
        2959
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6E6"
    },
    "430": {
      "fn": "Ballot.winnerName",
      "jump": "i",
      "offset": [
        2829,
        2959
      ],
      "op": "JUMP",
      "path": "0"
    },
    "431": {
      "fn": "Ballot.vote",
      "offset": [
        2127,
        2458
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "432": {
      "fn": "Ballot.vote",
      "offset": [
        2209,
        2219
      ],
      "op": "CALLER",
      "path": "0"
    },
    "433": {
      "fn": "Ballot.vote",
      "offset": [
        2179,
        2199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "435": {
      "fn": "Ballot.vote",
      "offset": [
        2202,
        2220
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "436": {
      "fn": "Ballot.vote",
      "offset": [
        2202,
        2220
      ],
      "op": "DUP2",
      "path": "0"
    },
    "437": {
      "fn": "Ballot.vote",
      "offset": [
        2202,
        2220
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "438": {
      "fn": "Ballot.vote",
      "offset": [
        2202,
        2208
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "440": {
      "fn": "Ballot.vote",
      "offset": [
        2202,
        2220
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "442": {
      "fn": "Ballot.vote",
      "offset": [
        2202,
        2220
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "443": {
      "fn": "Ballot.vote",
      "offset": [
        2202,
        2220
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "445": {
      "fn": "Ballot.vote",
      "offset": [
        2202,
        2220
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "446": {
      "fn": "Ballot.vote",
      "offset": [
        2202,
        2220
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "447": {
      "fn": "Ballot.vote",
      "offset": [
        2238,
        2251
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x2"
    },
    "449": {
      "fn": "Ballot.vote",
      "offset": [
        2238,
        2251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "450": {
      "fn": "Ballot.vote",
      "offset": [
        2238,
        2251
      ],
      "op": "ADD",
      "path": "0"
    },
    "451": {
      "fn": "Ballot.vote",
      "offset": [
        2238,
        2251
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "452": {
      "fn": "Ballot.vote",
      "offset": [
        2230,
        2277
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x208"
    },
    "455": {
      "fn": "Ballot.vote",
      "offset": [
        2230,
        2277
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "456": {
      "fn": "Ballot.vote",
      "offset": [
        2230,
        2277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "458": {
      "fn": "Ballot.vote",
      "offset": [
        2230,
        2277
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "459": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "463": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "465": {
      "op": "SHL"
    },
    "466": {
      "fn": "Ballot.vote",
      "offset": [
        2230,
        2277
      ],
      "op": "DUP2",
      "path": "0"
    },
    "467": {
      "fn": "Ballot.vote",
      "offset": [
        2230,
        2277
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "468": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "470": {
      "fn": "Ballot.vote",
      "offset": [
        2230,
        2277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "472": {
      "fn": "Ballot.vote",
      "offset": [
        2230,
        2277
      ],
      "op": "DUP3",
      "path": "0"
    },
    "473": {
      "fn": "Ballot.vote",
      "offset": [
        2230,
        2277
      ],
      "op": "ADD",
      "path": "0"
    },
    "474": {
      "op": "MSTORE"
    },
    "475": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "477": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "479": {
      "op": "DUP3"
    },
    "480": {
      "op": "ADD"
    },
    "481": {
      "op": "MSTORE"
    },
    "482": {
      "op": "PUSH17",
      "value": "0x4E6F2072696768747320746F20766F7465"
    },
    "500": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "502": {
      "op": "SHL"
    },
    "503": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "505": {
      "op": "DUP3"
    },
    "506": {
      "op": "ADD"
    },
    "507": {
      "op": "MSTORE"
    },
    "508": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "510": {
      "op": "ADD"
    },
    "511": {
      "fn": "Ballot.vote",
      "offset": [
        2230,
        2277
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "512": {
      "fn": "Ballot.vote",
      "offset": [
        2230,
        2277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "514": {
      "fn": "Ballot.vote",
      "offset": [
        2230,
        2277
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "515": {
      "fn": "Ballot.vote",
      "offset": [
        2230,
        2277
      ],
      "op": "DUP1",
      "path": "0"
    },
    "516": {
      "fn": "Ballot.vote",
      "offset": [
        2230,
        2277
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "517": {
      "fn": "Ballot.vote",
      "offset": [
        2230,
        2277
      ],
      "op": "SUB",
      "path": "0"
    },
    "518": {
      "fn": "Ballot.vote",
      "offset": [
        2230,
        2277
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "519": {
      "fn": "Ballot.vote",
      "offset": [
        2230,
        2277
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "520": {
      "fn": "Ballot.vote",
      "offset": [
        2230,
        2277
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "521": {
      "fn": "Ballot.vote",
      "offset": [
        2296,
        2308
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x3"
    },
    "523": {
      "fn": "Ballot.vote",
      "offset": [
        2296,
        2308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "524": {
      "fn": "Ballot.vote",
      "offset": [
        2296,
        2308
      ],
      "op": "ADD",
      "path": "0"
    },
    "525": {
      "fn": "Ballot.vote",
      "offset": [
        2296,
        2308
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "526": {
      "fn": "Ballot.vote",
      "offset": [
        2296,
        2308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "528": {
      "fn": "Ballot.vote",
      "offset": [
        2296,
        2308
      ],
      "op": "AND",
      "path": "0"
    },
    "529": {
      "branch": 22,
      "fn": "Ballot.vote",
      "offset": [
        2295,
        2308
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "530": {
      "fn": "Ballot.vote",
      "offset": [
        2287,
        2330
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x251"
    },
    "533": {
      "branch": 22,
      "fn": "Ballot.vote",
      "offset": [
        2287,
        2330
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "534": {
      "fn": "Ballot.vote",
      "offset": [
        2287,
        2330
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "536": {
      "fn": "Ballot.vote",
      "offset": [
        2287,
        2330
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "537": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "541": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "543": {
      "op": "SHL"
    },
    "544": {
      "fn": "Ballot.vote",
      "offset": [
        2287,
        2330
      ],
      "op": "DUP2",
      "path": "0"
    },
    "545": {
      "fn": "Ballot.vote",
      "offset": [
        2287,
        2330
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "546": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "548": {
      "fn": "Ballot.vote",
      "offset": [
        2287,
        2330
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "550": {
      "fn": "Ballot.vote",
      "offset": [
        2287,
        2330
      ],
      "op": "DUP3",
      "path": "0"
    },
    "551": {
      "fn": "Ballot.vote",
      "offset": [
        2287,
        2330
      ],
      "op": "ADD",
      "path": "0"
    },
    "552": {
      "op": "MSTORE"
    },
    "553": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "555": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "557": {
      "op": "DUP3"
    },
    "558": {
      "op": "ADD"
    },
    "559": {
      "op": "MSTORE"
    },
    "560": {
      "op": "PUSH17",
      "value": "0x165BDD48185B1C9958591E481D9BDD1959"
    },
    "578": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "580": {
      "op": "SHL"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "583": {
      "op": "DUP3"
    },
    "584": {
      "op": "ADD"
    },
    "585": {
      "op": "MSTORE"
    },
    "586": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "588": {
      "op": "ADD"
    },
    "589": {
      "fn": "Ballot.vote",
      "offset": [
        2287,
        2330
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FF"
    },
    "592": {
      "op": "JUMP"
    },
    "593": {
      "fn": "Ballot.vote",
      "offset": [
        2287,
        2330
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "594": {
      "fn": "Ballot.vote",
      "offset": [
        2341,
        2352
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x1"
    },
    "596": {
      "fn": "Ballot.vote",
      "offset": [
        2341,
        2352
      ],
      "op": "DUP1",
      "path": "0"
    },
    "597": {
      "fn": "Ballot.vote",
      "offset": [
        2341,
        2352
      ],
      "op": "DUP3",
      "path": "0"
    },
    "598": {
      "fn": "Ballot.vote",
      "offset": [
        2341,
        2352
      ],
      "op": "ADD",
      "path": "0"
    },
    "599": {
      "fn": "Ballot.vote",
      "offset": [
        2341,
        2364
      ],
      "op": "DUP4",
      "path": "0"
    },
    "600": {
      "fn": "Ballot.vote",
      "offset": [
        2341,
        2364
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "601": {
      "fn": "Ballot.vote",
      "offset": [
        2341,
        2364
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "602": {
      "fn": "Ballot.vote",
      "offset": [
        2374,
        2386
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x3"
    },
    "604": {
      "fn": "Ballot.vote",
      "offset": [
        2374,
        2386
      ],
      "op": "DUP3",
      "path": "0"
    },
    "605": {
      "fn": "Ballot.vote",
      "offset": [
        2374,
        2386
      ],
      "op": "ADD",
      "path": "0"
    },
    "606": {
      "fn": "Ballot.vote",
      "offset": [
        2374,
        2393
      ],
      "op": "DUP1",
      "path": "0"
    },
    "607": {
      "fn": "Ballot.vote",
      "offset": [
        2374,
        2393
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "608": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "610": {
      "op": "NOT"
    },
    "611": {
      "fn": "Ballot.vote",
      "offset": [
        2374,
        2393
      ],
      "op": "AND",
      "path": "0"
    },
    "612": {
      "fn": "Ballot.vote",
      "offset": [
        2374,
        2393
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "613": {
      "fn": "Ballot.vote",
      "offset": [
        2374,
        2393
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "614": {
      "fn": "Ballot.vote",
      "offset": [
        2374,
        2393
      ],
      "op": "OR",
      "path": "0"
    },
    "615": {
      "fn": "Ballot.vote",
      "offset": [
        2374,
        2393
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "616": {
      "fn": "Ballot.vote",
      "offset": [
        2374,
        2393
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "617": {
      "fn": "Ballot.vote",
      "offset": [
        2438,
        2451
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x2"
    },
    "619": {
      "fn": "Ballot.vote",
      "offset": [
        2438,
        2451
      ],
      "op": "DUP1",
      "path": "0"
    },
    "620": {
      "fn": "Ballot.vote",
      "offset": [
        2438,
        2451
      ],
      "op": "DUP3",
      "path": "0"
    },
    "621": {
      "fn": "Ballot.vote",
      "offset": [
        2438,
        2451
      ],
      "op": "ADD",
      "path": "0"
    },
    "622": {
      "fn": "Ballot.vote",
      "offset": [
        2438,
        2451
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "623": {
      "fn": "Ballot.vote",
      "offset": [
        2404,
        2424
      ],
      "op": "DUP2",
      "path": "0"
    },
    "624": {
      "fn": "Ballot.vote",
      "offset": [
        2404,
        2424
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "625": {
      "fn": "Ballot.vote",
      "offset": [
        2438,
        2451
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "626": {
      "fn": "Ballot.vote",
      "offset": [
        2438,
        2451
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "627": {
      "fn": "Ballot.vote",
      "offset": [
        2438,
        2451
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "628": {
      "fn": "Ballot.vote",
      "offset": [
        2355,
        2364
      ],
      "op": "DUP5",
      "path": "0"
    },
    "629": {
      "fn": "Ballot.vote",
      "offset": [
        2355,
        2364
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "630": {
      "fn": "Ballot.vote",
      "offset": [
        2404,
        2424
      ],
      "op": "DUP2",
      "path": "0"
    },
    "631": {
      "fn": "Ballot.vote",
      "offset": [
        2404,
        2424
      ],
      "op": "LT",
      "path": "0"
    },
    "632": {
      "fn": "Ballot.vote",
      "offset": [
        2404,
        2424
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x283"
    },
    "635": {
      "fn": "Ballot.vote",
      "offset": [
        2404,
        2424
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "636": {
      "fn": "Ballot.vote",
      "offset": [
        2404,
        2424
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x283"
    },
    "639": {
      "fn": "Ballot.vote",
      "offset": [
        2404,
        2424
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x762"
    },
    "642": {
      "fn": "Ballot.vote",
      "jump": "i",
      "offset": [
        2404,
        2424
      ],
      "op": "JUMP",
      "path": "0"
    },
    "643": {
      "fn": "Ballot.vote",
      "offset": [
        2404,
        2424
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "644": {
      "fn": "Ballot.vote",
      "offset": [
        2404,
        2424
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "645": {
      "fn": "Ballot.vote",
      "offset": [
        2404,
        2424
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "647": {
      "fn": "Ballot.vote",
      "offset": [
        2404,
        2424
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "648": {
      "fn": "Ballot.vote",
      "offset": [
        2404,
        2424
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "650": {
      "fn": "Ballot.vote",
      "offset": [
        2404,
        2424
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "652": {
      "fn": "Ballot.vote",
      "offset": [
        2404,
        2424
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "653": {
      "fn": "Ballot.vote",
      "offset": [
        2404,
        2424
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "654": {
      "fn": "Ballot.vote",
      "offset": [
        2404,
        2424
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "656": {
      "fn": "Ballot.vote",
      "offset": [
        2404,
        2424
      ],
      "op": "MUL",
      "path": "0"
    },
    "657": {
      "fn": "Ballot.vote",
      "offset": [
        2404,
        2424
      ],
      "op": "ADD",
      "path": "0"
    },
    "658": {
      "fn": "Ballot.vote",
      "offset": [
        2404,
        2434
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "660": {
      "fn": "Ballot.vote",
      "offset": [
        2404,
        2434
      ],
      "op": "ADD",
      "path": "0"
    },
    "661": {
      "fn": "Ballot.vote",
      "offset": [
        2404,
        2434
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "663": {
      "fn": "Ballot.vote",
      "offset": [
        2404,
        2451
      ],
      "op": "DUP3",
      "path": "0"
    },
    "664": {
      "fn": "Ballot.vote",
      "offset": [
        2404,
        2451
      ],
      "op": "DUP3",
      "path": "0"
    },
    "665": {
      "fn": "Ballot.vote",
      "offset": [
        2404,
        2451
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "666": {
      "fn": "Ballot.vote",
      "offset": [
        2404,
        2451
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A3"
    },
    "669": {
      "fn": "Ballot.vote",
      "offset": [
        2404,
        2451
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "670": {
      "fn": "Ballot.vote",
      "offset": [
        2404,
        2451
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "671": {
      "fn": "Ballot.vote",
      "offset": [
        2404,
        2451
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x78E"
    },
    "674": {
      "fn": "Ballot.vote",
      "jump": "i",
      "offset": [
        2404,
        2451
      ],
      "op": "JUMP",
      "path": "0"
    },
    "675": {
      "fn": "Ballot.vote",
      "offset": [
        2404,
        2451
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "676": {
      "fn": "Ballot.vote",
      "offset": [
        2404,
        2451
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "677": {
      "fn": "Ballot.vote",
      "offset": [
        2404,
        2451
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "678": {
      "fn": "Ballot.vote",
      "offset": [
        2404,
        2451
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "679": {
      "op": "POP"
    },
    "680": {
      "op": "POP"
    },
    "681": {
      "op": "POP"
    },
    "682": {
      "op": "POP"
    },
    "683": {
      "fn": "Ballot.vote",
      "jump": "o",
      "offset": [
        2127,
        2458
      ],
      "op": "JUMP",
      "path": "0"
    },
    "684": {
      "offset": [
        662,
        689
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "685": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "687": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "DUP2",
      "path": "0"
    },
    "688": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "DUP2",
      "path": "0"
    },
    "689": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "690": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "DUP2",
      "path": "0"
    },
    "691": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "LT",
      "path": "0"
    },
    "692": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BC"
    },
    "695": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "696": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "698": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "DUP1",
      "path": "0"
    },
    "699": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "REVERT",
      "path": "0"
    },
    "700": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "701": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "703": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "704": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "DUP3",
      "path": "0"
    },
    "705": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "706": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "708": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "709": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "710": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "711": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "713": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "714": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "715": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "MUL",
      "path": "0"
    },
    "716": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "ADD",
      "path": "0"
    },
    "717": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "DUP1",
      "path": "0"
    },
    "718": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "719": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "721": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "722": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "723": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "ADD",
      "path": "0"
    },
    "724": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "725": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "726": {
      "fn": "Ballot.vote",
      "offset": [
        662,
        689
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "727": {
      "op": "POP"
    },
    "728": {
      "offset": [
        662,
        689
      ],
      "op": "DUP3",
      "path": "0"
    },
    "729": {
      "fn": "Ballot.vote",
      "jump": "o",
      "offset": [
        662,
        689
      ],
      "op": "JUMP",
      "path": "0"
    },
    "730": {
      "fn": "Ballot.delegate",
      "offset": [
        1388,
        2121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "731": {
      "fn": "Ballot.delegate",
      "offset": [
        1468,
        1478
      ],
      "op": "CALLER",
      "path": "0"
    },
    "732": {
      "fn": "Ballot.delegate",
      "offset": [
        1438,
        1458
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "734": {
      "fn": "Ballot.delegate",
      "offset": [
        1461,
        1479
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "735": {
      "fn": "Ballot.delegate",
      "offset": [
        1461,
        1479
      ],
      "op": "DUP2",
      "path": "0"
    },
    "736": {
      "fn": "Ballot.delegate",
      "offset": [
        1461,
        1479
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "737": {
      "fn": "Ballot.delegate",
      "offset": [
        1461,
        1467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "739": {
      "fn": "Ballot.delegate",
      "offset": [
        1461,
        1479
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "741": {
      "fn": "Ballot.delegate",
      "offset": [
        1461,
        1479
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "742": {
      "fn": "Ballot.delegate",
      "offset": [
        1461,
        1479
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "744": {
      "fn": "Ballot.delegate",
      "offset": [
        1461,
        1479
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "745": {
      "fn": "Ballot.delegate",
      "offset": [
        1461,
        1479
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "746": {
      "fn": "Ballot.delegate",
      "offset": [
        1498,
        1510
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x3"
    },
    "748": {
      "fn": "Ballot.delegate",
      "offset": [
        1498,
        1510
      ],
      "op": "DUP2",
      "path": "0"
    },
    "749": {
      "fn": "Ballot.delegate",
      "offset": [
        1498,
        1510
      ],
      "op": "ADD",
      "path": "0"
    },
    "750": {
      "fn": "Ballot.delegate",
      "offset": [
        1498,
        1510
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "751": {
      "fn": "Ballot.delegate",
      "offset": [
        1498,
        1510
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "753": {
      "fn": "Ballot.delegate",
      "offset": [
        1498,
        1510
      ],
      "op": "AND",
      "path": "0"
    },
    "754": {
      "branch": 23,
      "fn": "Ballot.delegate",
      "offset": [
        1497,
        1510
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "755": {
      "fn": "Ballot.delegate",
      "offset": [
        1489,
        1550
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34A"
    },
    "758": {
      "branch": 23,
      "fn": "Ballot.delegate",
      "offset": [
        1489,
        1550
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "759": {
      "fn": "Ballot.delegate",
      "offset": [
        1489,
        1550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "761": {
      "fn": "Ballot.delegate",
      "offset": [
        1489,
        1550
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "762": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "766": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "768": {
      "op": "SHL"
    },
    "769": {
      "fn": "Ballot.delegate",
      "offset": [
        1489,
        1550
      ],
      "op": "DUP2",
      "path": "0"
    },
    "770": {
      "fn": "Ballot.delegate",
      "offset": [
        1489,
        1550
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "771": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "773": {
      "fn": "Ballot.delegate",
      "offset": [
        1489,
        1550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "775": {
      "fn": "Ballot.delegate",
      "offset": [
        1489,
        1550
      ],
      "op": "DUP3",
      "path": "0"
    },
    "776": {
      "fn": "Ballot.delegate",
      "offset": [
        1489,
        1550
      ],
      "op": "ADD",
      "path": "0"
    },
    "777": {
      "op": "MSTORE"
    },
    "778": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "780": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "782": {
      "op": "DUP3"
    },
    "783": {
      "op": "ADD"
    },
    "784": {
      "op": "MSTORE"
    },
    "785": {
      "op": "PUSH32",
      "value": "0x596F7520616C726561647920766F7465642E2043616E6E6F742064656C656761"
    },
    "818": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "820": {
      "op": "DUP3"
    },
    "821": {
      "op": "ADD"
    },
    "822": {
      "op": "MSTORE"
    },
    "823": {
      "op": "PUSH3",
      "value": "0x3A3297"
    },
    "827": {
      "op": "PUSH1",
      "value": "0xE9"
    },
    "829": {
      "op": "SHL"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "832": {
      "op": "DUP3"
    },
    "833": {
      "op": "ADD"
    },
    "834": {
      "op": "MSTORE"
    },
    "835": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "837": {
      "op": "ADD"
    },
    "838": {
      "fn": "Ballot.delegate",
      "offset": [
        1489,
        1550
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FF"
    },
    "841": {
      "op": "JUMP"
    },
    "842": {
      "fn": "Ballot.delegate",
      "offset": [
        1489,
        1550
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "843": {
      "fn": "Ballot.delegate",
      "offset": [
        1568,
        1578
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 6
    },
    "844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "848": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "850": {
      "op": "SHL"
    },
    "851": {
      "op": "SUB"
    },
    "852": {
      "fn": "Ballot.delegate",
      "offset": [
        1568,
        1585
      ],
      "op": "DUP4",
      "path": "0"
    },
    "853": {
      "fn": "Ballot.delegate",
      "offset": [
        1568,
        1585
      ],
      "op": "AND",
      "path": "0"
    },
    "854": {
      "fn": "Ballot.delegate",
      "offset": [
        1568,
        1585
      ],
      "op": "EQ",
      "path": "0"
    },
    "855": {
      "branch": 24,
      "fn": "Ballot.delegate",
      "offset": [
        1568,
        1585
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "856": {
      "fn": "Ballot.delegate",
      "offset": [
        1560,
        1622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A3"
    },
    "859": {
      "branch": 24,
      "fn": "Ballot.delegate",
      "offset": [
        1560,
        1622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "860": {
      "fn": "Ballot.delegate",
      "offset": [
        1560,
        1622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "862": {
      "fn": "Ballot.delegate",
      "offset": [
        1560,
        1622
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "863": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "867": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "869": {
      "op": "SHL"
    },
    "870": {
      "fn": "Ballot.delegate",
      "offset": [
        1560,
        1622
      ],
      "op": "DUP2",
      "path": "0"
    },
    "871": {
      "fn": "Ballot.delegate",
      "offset": [
        1560,
        1622
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "872": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "874": {
      "fn": "Ballot.delegate",
      "offset": [
        1560,
        1622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "876": {
      "fn": "Ballot.delegate",
      "offset": [
        1560,
        1622
      ],
      "op": "DUP3",
      "path": "0"
    },
    "877": {
      "fn": "Ballot.delegate",
      "offset": [
        1560,
        1622
      ],
      "op": "ADD",
      "path": "0"
    },
    "878": {
      "op": "DUP2"
    },
    "879": {
      "op": "SWAP1"
    },
    "880": {
      "op": "MSTORE"
    },
    "881": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "883": {
      "op": "DUP3"
    },
    "884": {
      "op": "ADD"
    },
    "885": {
      "op": "MSTORE"
    },
    "886": {
      "op": "PUSH32",
      "value": "0x596F752063616E6E6F742064656C656761746520746F20796F757273656C662E"
    },
    "919": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "921": {
      "op": "DUP3"
    },
    "922": {
      "op": "ADD"
    },
    "923": {
      "op": "MSTORE"
    },
    "924": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "926": {
      "op": "ADD"
    },
    "927": {
      "fn": "Ballot.delegate",
      "offset": [
        1560,
        1622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FF"
    },
    "930": {
      "op": "JUMP"
    },
    "931": {
      "fn": "Ballot.delegate",
      "offset": [
        1560,
        1622
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "936": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "938": {
      "op": "SHL"
    },
    "939": {
      "op": "SUB"
    },
    "940": {
      "fn": "Ballot.delegate",
      "offset": [
        1639,
        1650
      ],
      "op": "DUP3",
      "path": "0"
    },
    "941": {
      "fn": "Ballot.delegate",
      "offset": [
        1639,
        1650
      ],
      "op": "DUP2",
      "path": "0"
    },
    "942": {
      "fn": "Ballot.delegate",
      "offset": [
        1639,
        1650
      ],
      "op": "AND",
      "path": "0"
    },
    "943": {
      "fn": "Ballot.delegate",
      "offset": [
        1671,
        1672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "945": {
      "fn": "Ballot.delegate",
      "offset": [
        1639,
        1650
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "946": {
      "fn": "Ballot.delegate",
      "offset": [
        1639,
        1650
      ],
      "op": "DUP2",
      "path": "0"
    },
    "947": {
      "fn": "Ballot.delegate",
      "offset": [
        1639,
        1650
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "948": {
      "fn": "Ballot.delegate",
      "offset": [
        1639,
        1645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "950": {
      "fn": "Ballot.delegate",
      "offset": [
        1639,
        1650
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "952": {
      "fn": "Ballot.delegate",
      "offset": [
        1639,
        1650
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "953": {
      "fn": "Ballot.delegate",
      "offset": [
        1639,
        1650
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "955": {
      "fn": "Ballot.delegate",
      "offset": [
        1639,
        1650
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "956": {
      "fn": "Ballot.delegate",
      "offset": [
        1639,
        1650
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "957": {
      "fn": "Ballot.delegate",
      "offset": [
        1639,
        1659
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "958": {
      "fn": "Ballot.delegate",
      "offset": [
        1639,
        1659
      ],
      "op": "AND",
      "path": "0"
    },
    "959": {
      "fn": "Ballot.delegate",
      "offset": [
        1639,
        1673
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "960": {
      "fn": "Ballot.delegate",
      "offset": [
        1632,
        1795
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x436"
    },
    "963": {
      "fn": "Ballot.delegate",
      "offset": [
        1632,
        1795
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "968": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "970": {
      "op": "SHL"
    },
    "971": {
      "op": "SUB"
    },
    "972": {
      "fn": "Ballot.delegate",
      "offset": [
        1695,
        1706
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 7
    },
    "973": {
      "fn": "Ballot.delegate",
      "offset": [
        1695,
        1706
      ],
      "op": "DUP3",
      "path": "0"
    },
    "974": {
      "fn": "Ballot.delegate",
      "offset": [
        1695,
        1706
      ],
      "op": "AND",
      "path": "0"
    },
    "975": {
      "fn": "Ballot.delegate",
      "offset": [
        1695,
        1706
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "977": {
      "fn": "Ballot.delegate",
      "offset": [
        1695,
        1706
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "978": {
      "fn": "Ballot.delegate",
      "offset": [
        1695,
        1706
      ],
      "op": "DUP2",
      "path": "0"
    },
    "979": {
      "fn": "Ballot.delegate",
      "offset": [
        1695,
        1706
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "980": {
      "fn": "Ballot.delegate",
      "offset": [
        1695,
        1701
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "982": {
      "fn": "Ballot.delegate",
      "offset": [
        1695,
        1706
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "984": {
      "fn": "Ballot.delegate",
      "offset": [
        1695,
        1706
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "985": {
      "fn": "Ballot.delegate",
      "offset": [
        1695,
        1706
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "987": {
      "fn": "Ballot.delegate",
      "offset": [
        1695,
        1706
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "988": {
      "fn": "Ballot.delegate",
      "offset": [
        1695,
        1706
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "989": {
      "fn": "Ballot.delegate",
      "offset": [
        1695,
        1715
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "990": {
      "fn": "Ballot.delegate",
      "offset": [
        1695,
        1715
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "991": {
      "fn": "Ballot.delegate",
      "offset": [
        1695,
        1715
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "992": {
      "fn": "Ballot.delegate",
      "offset": [
        1695,
        1715
      ],
      "op": "AND",
      "path": "0"
    },
    "993": {
      "fn": "Ballot.delegate",
      "offset": [
        1695,
        1715
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "994": {
      "fn": "Ballot.delegate",
      "offset": [
        1745,
        1755
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 8
    },
    "995": {
      "fn": "Ballot.delegate",
      "offset": [
        1738,
        1755
      ],
      "op": "DUP3",
      "path": "0"
    },
    "996": {
      "fn": "Ballot.delegate",
      "offset": [
        1738,
        1755
      ],
      "op": "EQ",
      "path": "0"
    },
    "997": {
      "branch": 25,
      "fn": "Ballot.delegate",
      "offset": [
        1738,
        1755
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "998": {
      "fn": "Ballot.delegate",
      "offset": [
        1730,
        1784
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x431"
    },
    "1001": {
      "branch": 25,
      "fn": "Ballot.delegate",
      "offset": [
        1730,
        1784
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1002": {
      "fn": "Ballot.delegate",
      "offset": [
        1730,
        1784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1004": {
      "fn": "Ballot.delegate",
      "offset": [
        1730,
        1784
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1005": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1011": {
      "op": "SHL"
    },
    "1012": {
      "fn": "Ballot.delegate",
      "offset": [
        1730,
        1784
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1013": {
      "fn": "Ballot.delegate",
      "offset": [
        1730,
        1784
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1016": {
      "fn": "Ballot.delegate",
      "offset": [
        1730,
        1784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1018": {
      "fn": "Ballot.delegate",
      "offset": [
        1730,
        1784
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1019": {
      "fn": "Ballot.delegate",
      "offset": [
        1730,
        1784
      ],
      "op": "ADD",
      "path": "0"
    },
    "1020": {
      "op": "MSTORE"
    },
    "1021": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1025": {
      "op": "DUP3"
    },
    "1026": {
      "op": "ADD"
    },
    "1027": {
      "op": "MSTORE"
    },
    "1028": {
      "op": "PUSH32",
      "value": "0x466F756E64206C6F6F7020696E2064656C65676174696F6E0000000000000000"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1063": {
      "op": "DUP3"
    },
    "1064": {
      "op": "ADD"
    },
    "1065": {
      "op": "MSTORE"
    },
    "1066": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1068": {
      "op": "ADD"
    },
    "1069": {
      "fn": "Ballot.delegate",
      "offset": [
        1730,
        1784
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FF"
    },
    "1072": {
      "op": "JUMP"
    },
    "1073": {
      "fn": "Ballot.delegate",
      "offset": [
        1730,
        1784
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1074": {
      "fn": "Ballot.delegate",
      "offset": [
        1632,
        1795
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A3"
    },
    "1077": {
      "fn": "Ballot.delegate",
      "offset": [
        1632,
        1795
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1078": {
      "fn": "Ballot.delegate",
      "offset": [
        1632,
        1795
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1085": {
      "op": "SHL"
    },
    "1086": {
      "op": "SUB"
    },
    "1087": {
      "fn": "Ballot.delegate",
      "offset": [
        1831,
        1842
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1088": {
      "fn": "Ballot.delegate",
      "offset": [
        1831,
        1842
      ],
      "op": "AND",
      "path": "0"
    },
    "1089": {
      "fn": "Ballot.delegate",
      "offset": [
        1805,
        1828
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1091": {
      "fn": "Ballot.delegate",
      "offset": [
        1831,
        1842
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1092": {
      "fn": "Ballot.delegate",
      "offset": [
        1831,
        1842
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1093": {
      "fn": "Ballot.delegate",
      "offset": [
        1831,
        1842
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1094": {
      "fn": "Ballot.delegate",
      "offset": [
        1831,
        1837
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1096": {
      "fn": "Ballot.delegate",
      "offset": [
        1831,
        1842
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1098": {
      "fn": "Ballot.delegate",
      "offset": [
        1831,
        1842
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1099": {
      "fn": "Ballot.delegate",
      "offset": [
        1831,
        1842
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1101": {
      "fn": "Ballot.delegate",
      "offset": [
        1831,
        1842
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1102": {
      "fn": "Ballot.delegate",
      "offset": [
        1831,
        1842
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1103": {
      "fn": "Ballot.delegate",
      "offset": [
        1861,
        1877
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x2"
    },
    "1105": {
      "fn": "Ballot.delegate",
      "offset": [
        1861,
        1877
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1106": {
      "fn": "Ballot.delegate",
      "offset": [
        1861,
        1877
      ],
      "op": "ADD",
      "path": "0"
    },
    "1107": {
      "fn": "Ballot.delegate",
      "offset": [
        1861,
        1877
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1108": {
      "fn": "Ballot.delegate",
      "offset": [
        1853,
        1882
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x45C"
    },
    "1111": {
      "fn": "Ballot.delegate",
      "offset": [
        1853,
        1882
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1112": {
      "fn": "Ballot.delegate",
      "offset": [
        1853,
        1882
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1114": {
      "fn": "Ballot.delegate",
      "offset": [
        1853,
        1882
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1115": {
      "fn": "Ballot.delegate",
      "offset": [
        1853,
        1882
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1116": {
      "fn": "Ballot.delegate",
      "offset": [
        1853,
        1882
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1117": {
      "fn": "Ballot.delegate",
      "offset": [
        1892,
        1904
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x3"
    },
    "1119": {
      "fn": "Ballot.delegate",
      "offset": [
        1892,
        1904
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1120": {
      "fn": "Ballot.delegate",
      "offset": [
        1892,
        1904
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1121": {
      "fn": "Ballot.delegate",
      "offset": [
        1892,
        1904
      ],
      "op": "ADD",
      "path": "0"
    },
    "1122": {
      "fn": "Ballot.delegate",
      "offset": [
        1892,
        1911
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1123": {
      "fn": "Ballot.delegate",
      "offset": [
        1892,
        1911
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1124": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1126": {
      "op": "NOT"
    },
    "1127": {
      "fn": "Ballot.delegate",
      "offset": [
        1892,
        1911
      ],
      "op": "AND",
      "path": "0"
    },
    "1128": {
      "fn": "Ballot.delegate",
      "offset": [
        1907,
        1911
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1130": {
      "fn": "Ballot.delegate",
      "offset": [
        1892,
        1911
      ],
      "op": "OR",
      "path": "0"
    },
    "1131": {
      "fn": "Ballot.delegate",
      "offset": [
        1892,
        1911
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1132": {
      "fn": "Ballot.delegate",
      "offset": [
        1892,
        1911
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1133": {
      "fn": "Ballot.delegate",
      "offset": [
        1921,
        1942
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 11
    },
    "1134": {
      "fn": "Ballot.delegate",
      "offset": [
        1921,
        1942
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1139": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1141": {
      "op": "SHL"
    },
    "1142": {
      "op": "SUB"
    },
    "1143": {
      "fn": "Ballot.delegate",
      "offset": [
        1921,
        1942
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1144": {
      "fn": "Ballot.delegate",
      "offset": [
        1921,
        1942
      ],
      "op": "AND",
      "path": "0"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1149": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1151": {
      "op": "SHL"
    },
    "1152": {
      "op": "SUB"
    },
    "1153": {
      "op": "NOT"
    },
    "1154": {
      "fn": "Ballot.delegate",
      "offset": [
        1921,
        1942
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1155": {
      "fn": "Ballot.delegate",
      "offset": [
        1921,
        1942
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1156": {
      "fn": "Ballot.delegate",
      "offset": [
        1921,
        1942
      ],
      "op": "AND",
      "path": "0"
    },
    "1157": {
      "fn": "Ballot.delegate",
      "offset": [
        1921,
        1942
      ],
      "op": "OR",
      "path": "0"
    },
    "1158": {
      "fn": "Ballot.delegate",
      "offset": [
        1921,
        1942
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1159": {
      "fn": "Ballot.delegate",
      "offset": [
        1921,
        1942
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1160": {
      "fn": "Ballot.delegate",
      "offset": [
        1957,
        1972
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1161": {
      "fn": "Ballot.delegate",
      "offset": [
        1957,
        1972
      ],
      "op": "ADD",
      "path": "0"
    },
    "1162": {
      "fn": "Ballot.delegate",
      "offset": [
        1957,
        1972
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1163": {
      "fn": "Ballot.delegate",
      "offset": [
        1892,
        1911
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1165": {
      "branch": 26,
      "fn": "Ballot.delegate",
      "offset": [
        1957,
        1972
      ],
      "op": "AND",
      "path": "0"
    },
    "1166": {
      "fn": "Ballot.delegate",
      "offset": [
        1952,
        2115
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B4"
    },
    "1169": {
      "branch": 26,
      "fn": "Ballot.delegate",
      "offset": [
        1952,
        2115
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1170": {
      "fn": "Ballot.delegate",
      "offset": [
        2008,
        2014
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 12
    },
    "1171": {
      "fn": "Ballot.delegate",
      "offset": [
        2008,
        2021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1173": {
      "fn": "Ballot.delegate",
      "offset": [
        2008,
        2021
      ],
      "op": "ADD",
      "path": "0"
    },
    "1174": {
      "fn": "Ballot.delegate",
      "offset": [
        2008,
        2021
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1175": {
      "fn": "Ballot.delegate",
      "offset": [
        1988,
        1997
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1176": {
      "fn": "Ballot.delegate",
      "offset": [
        1988,
        2004
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1178": {
      "fn": "Ballot.delegate",
      "offset": [
        1988,
        2004
      ],
      "op": "ADD",
      "path": "0"
    },
    "1179": {
      "fn": "Ballot.delegate",
      "offset": [
        1988,
        2004
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1181": {
      "fn": "Ballot.delegate",
      "offset": [
        1988,
        2021
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1182": {
      "fn": "Ballot.delegate",
      "offset": [
        1988,
        2021
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1183": {
      "fn": "Ballot.delegate",
      "offset": [
        1988,
        2021
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1184": {
      "fn": "Ballot.delegate",
      "offset": [
        1988,
        2021
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A9"
    },
    "1187": {
      "fn": "Ballot.delegate",
      "offset": [
        1988,
        2021
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1188": {
      "fn": "Ballot.delegate",
      "offset": [
        1988,
        2021
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1189": {
      "fn": "Ballot.delegate",
      "offset": [
        1988,
        2021
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x78E"
    },
    "1192": {
      "fn": "Ballot.delegate",
      "jump": "i",
      "offset": [
        1988,
        2021
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1193": {
      "fn": "Ballot.delegate",
      "offset": [
        1988,
        2021
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1194": {
      "fn": "Ballot.delegate",
      "offset": [
        1988,
        2021
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1195": {
      "fn": "Ballot.delegate",
      "offset": [
        1988,
        2021
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1196": {
      "fn": "Ballot.delegate",
      "offset": [
        1988,
        2021
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1197": {
      "op": "POP"
    },
    "1198": {
      "fn": "Ballot.delegate",
      "offset": [
        1952,
        2115
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F6"
    },
    "1201": {
      "fn": "Ballot.delegate",
      "offset": [
        1952,
        2115
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1202": {
      "op": "POP"
    },
    "1203": {
      "fn": "Ballot.delegate",
      "offset": [
        1952,
        2115
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1204": {
      "fn": "Ballot.delegate",
      "offset": [
        1952,
        2115
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1205": {
      "fn": "Ballot.delegate",
      "offset": [
        2091,
        2097
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 13
    },
    "1206": {
      "fn": "Ballot.delegate",
      "offset": [
        2091,
        2104
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1208": {
      "fn": "Ballot.delegate",
      "offset": [
        2091,
        2104
      ],
      "op": "ADD",
      "path": "0"
    },
    "1209": {
      "fn": "Ballot.delegate",
      "offset": [
        2091,
        2104
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1210": {
      "fn": "Ballot.delegate",
      "offset": [
        2052,
        2061
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1212": {
      "fn": "Ballot.delegate",
      "offset": [
        2062,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1213": {
      "fn": "Ballot.delegate",
      "offset": [
        2062,
        2076
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1215": {
      "fn": "Ballot.delegate",
      "offset": [
        2062,
        2076
      ],
      "op": "ADD",
      "path": "0"
    },
    "1216": {
      "fn": "Ballot.delegate",
      "offset": [
        2062,
        2076
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1217": {
      "fn": "Ballot.delegate",
      "offset": [
        2052,
        2077
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1218": {
      "fn": "Ballot.delegate",
      "offset": [
        2052,
        2077
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1219": {
      "fn": "Ballot.delegate",
      "offset": [
        2052,
        2077
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1220": {
      "fn": "Ballot.delegate",
      "offset": [
        2052,
        2077
      ],
      "op": "LT",
      "path": "0"
    },
    "1221": {
      "fn": "Ballot.delegate",
      "offset": [
        2052,
        2077
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D0"
    },
    "1224": {
      "fn": "Ballot.delegate",
      "offset": [
        2052,
        2077
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1225": {
      "fn": "Ballot.delegate",
      "offset": [
        2052,
        2077
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D0"
    },
    "1228": {
      "fn": "Ballot.delegate",
      "offset": [
        2052,
        2077
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x762"
    },
    "1231": {
      "fn": "Ballot.delegate",
      "jump": "i",
      "offset": [
        2052,
        2077
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1232": {
      "fn": "Ballot.delegate",
      "offset": [
        2052,
        2077
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1233": {
      "fn": "Ballot.delegate",
      "offset": [
        2052,
        2077
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1234": {
      "fn": "Ballot.delegate",
      "offset": [
        2052,
        2077
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1236": {
      "fn": "Ballot.delegate",
      "offset": [
        2052,
        2077
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1237": {
      "fn": "Ballot.delegate",
      "offset": [
        2052,
        2077
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1239": {
      "fn": "Ballot.delegate",
      "offset": [
        2052,
        2077
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1241": {
      "fn": "Ballot.delegate",
      "offset": [
        2052,
        2077
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1242": {
      "fn": "Ballot.delegate",
      "offset": [
        2052,
        2077
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1243": {
      "fn": "Ballot.delegate",
      "offset": [
        2052,
        2077
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1245": {
      "fn": "Ballot.delegate",
      "offset": [
        2052,
        2077
      ],
      "op": "MUL",
      "path": "0"
    },
    "1246": {
      "fn": "Ballot.delegate",
      "offset": [
        2052,
        2077
      ],
      "op": "ADD",
      "path": "0"
    },
    "1247": {
      "fn": "Ballot.delegate",
      "offset": [
        2052,
        2087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1249": {
      "fn": "Ballot.delegate",
      "offset": [
        2052,
        2087
      ],
      "op": "ADD",
      "path": "0"
    },
    "1250": {
      "fn": "Ballot.delegate",
      "offset": [
        2052,
        2087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1252": {
      "fn": "Ballot.delegate",
      "offset": [
        2052,
        2104
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1253": {
      "fn": "Ballot.delegate",
      "offset": [
        2052,
        2104
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1254": {
      "fn": "Ballot.delegate",
      "offset": [
        2052,
        2104
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1255": {
      "fn": "Ballot.delegate",
      "offset": [
        2052,
        2104
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F0"
    },
    "1258": {
      "fn": "Ballot.delegate",
      "offset": [
        2052,
        2104
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1259": {
      "fn": "Ballot.delegate",
      "offset": [
        2052,
        2104
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1260": {
      "fn": "Ballot.delegate",
      "offset": [
        2052,
        2104
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x78E"
    },
    "1263": {
      "fn": "Ballot.delegate",
      "jump": "i",
      "offset": [
        2052,
        2104
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1264": {
      "fn": "Ballot.delegate",
      "offset": [
        2052,
        2104
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1265": {
      "fn": "Ballot.delegate",
      "offset": [
        2052,
        2104
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1266": {
      "fn": "Ballot.delegate",
      "offset": [
        2052,
        2104
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1267": {
      "fn": "Ballot.delegate",
      "offset": [
        2052,
        2104
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1268": {
      "op": "POP"
    },
    "1269": {
      "op": "POP"
    },
    "1270": {
      "fn": "Ballot.delegate",
      "offset": [
        1952,
        2115
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1271": {
      "fn": "Ballot.delegate",
      "offset": [
        1428,
        2121
      ],
      "op": "POP",
      "path": "0"
    },
    "1272": {
      "fn": "Ballot.delegate",
      "offset": [
        1428,
        2121
      ],
      "op": "POP",
      "path": "0"
    },
    "1273": {
      "fn": "Ballot.delegate",
      "offset": [
        1388,
        2121
      ],
      "op": "POP",
      "path": "0"
    },
    "1274": {
      "fn": "Ballot.delegate",
      "jump": "o",
      "offset": [
        1388,
        2121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1275": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2464,
        2823
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1276": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2512,
        2536
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1278": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2512,
        2536
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1279": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2512,
        2536
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1280": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2587,
        2817
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1281": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2611,
        2620
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1283": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2611,
        2627
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1284": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2607,
        2627
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1285": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2607,
        2627
      ],
      "op": "LT",
      "path": "0"
    },
    "1286": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2587,
        2817
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1287": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2587,
        2817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x573"
    },
    "1290": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2587,
        2817
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1291": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2677,
        2693
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1292": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2652,
        2661
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1294": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2662,
        2663
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1295": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2652,
        2664
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1296": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2652,
        2664
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1297": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2652,
        2664
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1298": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2652,
        2664
      ],
      "op": "LT",
      "path": "0"
    },
    "1299": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2652,
        2664
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51E"
    },
    "1302": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2652,
        2664
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1303": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2652,
        2664
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51E"
    },
    "1306": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2652,
        2664
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x762"
    },
    "1309": {
      "fn": "Ballot.winningProposal",
      "jump": "i",
      "offset": [
        2652,
        2664
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1310": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2652,
        2664
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1311": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2652,
        2664
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1312": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2652,
        2664
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1314": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2652,
        2664
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1315": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2652,
        2664
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1317": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2652,
        2664
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1319": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2652,
        2664
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1320": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2652,
        2664
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1321": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2652,
        2664
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1323": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2652,
        2664
      ],
      "op": "MUL",
      "path": "0"
    },
    "1324": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2652,
        2664
      ],
      "op": "ADD",
      "path": "0"
    },
    "1325": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2652,
        2674
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1327": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2652,
        2674
      ],
      "op": "ADD",
      "path": "0"
    },
    "1328": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2652,
        2674
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1329": {
      "branch": 27,
      "fn": "Ballot.winningProposal",
      "offset": [
        2652,
        2693
      ],
      "op": "GT",
      "path": "0"
    },
    "1330": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2648,
        2807
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1331": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2648,
        2807
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x561"
    },
    "1334": {
      "branch": 27,
      "fn": "Ballot.winningProposal",
      "offset": [
        2648,
        2807
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1335": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2732,
        2741
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0x2"
    },
    "1337": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2742,
        2743
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1338": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2732,
        2744
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1339": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2732,
        2744
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1340": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2732,
        2744
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1341": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2732,
        2744
      ],
      "op": "LT",
      "path": "0"
    },
    "1342": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2732,
        2744
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x549"
    },
    "1345": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2732,
        2744
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1346": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2732,
        2744
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x549"
    },
    "1349": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2732,
        2744
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x762"
    },
    "1352": {
      "fn": "Ballot.winningProposal",
      "jump": "i",
      "offset": [
        2732,
        2744
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1353": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2732,
        2744
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1354": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2732,
        2744
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1355": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2732,
        2744
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1357": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2732,
        2744
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1358": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2732,
        2744
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1360": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2732,
        2744
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1362": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2732,
        2744
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1363": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2732,
        2744
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1364": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2732,
        2744
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1366": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2732,
        2744
      ],
      "op": "MUL",
      "path": "0"
    },
    "1367": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2732,
        2744
      ],
      "op": "ADD",
      "path": "0"
    },
    "1368": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2732,
        2754
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1370": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2732,
        2754
      ],
      "op": "ADD",
      "path": "0"
    },
    "1371": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2732,
        2754
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1372": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2713,
        2754
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1373": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2713,
        2754
      ],
      "op": "POP",
      "path": "0"
    },
    "1374": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2791,
        2792
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 15
    },
    "1375": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2772,
        2792
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1376": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2772,
        2792
      ],
      "op": "POP",
      "path": "0"
    },
    "1377": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2648,
        2807
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1378": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2629,
        2632
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 16
    },
    "1379": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2629,
        2632
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x56B"
    },
    "1382": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2629,
        2632
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1383": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2629,
        2632
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7A6"
    },
    "1386": {
      "fn": "Ballot.winningProposal",
      "jump": "i",
      "offset": [
        2629,
        2632
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1387": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2629,
        2632
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1388": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2629,
        2632
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1389": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2629,
        2632
      ],
      "op": "POP",
      "path": "0"
    },
    "1390": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2629,
        2632
      ],
      "op": "POP",
      "path": "0"
    },
    "1391": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2587,
        2817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x500"
    },
    "1394": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2587,
        2817
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1395": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2587,
        2817
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1396": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2587,
        2817
      ],
      "op": "POP",
      "path": "0"
    },
    "1397": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2538,
        2823
      ],
      "op": "POP",
      "path": "0"
    },
    "1398": {
      "fn": "Ballot.winningProposal",
      "offset": [
        2464,
        2823
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1399": {
      "fn": "Ballot.winningProposal",
      "jump": "o",
      "offset": [
        2464,
        2823
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1400": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        974,
        1382
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1401": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1069,
        1080
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0x0"
    },
    "1403": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1069,
        1080
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1410": {
      "op": "SHL"
    },
    "1411": {
      "op": "SUB"
    },
    "1412": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1069,
        1080
      ],
      "op": "AND",
      "path": "0"
    },
    "1413": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1055,
        1065
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1414": {
      "branch": 28,
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1055,
        1080
      ],
      "op": "EQ",
      "path": "0"
    },
    "1415": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1034,
        1148
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5E5"
    },
    "1418": {
      "branch": 28,
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1034,
        1148
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1419": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1034,
        1148
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1421": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1034,
        1148
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1422": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1428": {
      "op": "SHL"
    },
    "1429": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1034,
        1148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1430": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1034,
        1148
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1431": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1433": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1034,
        1148
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1435": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1034,
        1148
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1436": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1034,
        1148
      ],
      "op": "ADD",
      "path": "0"
    },
    "1437": {
      "op": "MSTORE"
    },
    "1438": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1442": {
      "op": "DUP3"
    },
    "1443": {
      "op": "ADD"
    },
    "1444": {
      "op": "MSTORE"
    },
    "1445": {
      "op": "PUSH32",
      "value": "0x4F6E6C79206368616972706572736F6E2063616E2061737369676E2072696768"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1480": {
      "op": "DUP3"
    },
    "1481": {
      "op": "ADD"
    },
    "1482": {
      "op": "MSTORE"
    },
    "1483": {
      "op": "PUSH10",
      "value": "0x747320746F20766F7465"
    },
    "1494": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "1496": {
      "op": "SHL"
    },
    "1497": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1499": {
      "op": "DUP3"
    },
    "1500": {
      "op": "ADD"
    },
    "1501": {
      "op": "MSTORE"
    },
    "1502": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1504": {
      "op": "ADD"
    },
    "1505": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1034,
        1148
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FF"
    },
    "1508": {
      "op": "JUMP"
    },
    "1509": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1034,
        1148
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1514": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1516": {
      "op": "SHL"
    },
    "1517": {
      "op": "SUB"
    },
    "1518": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1167,
        1181
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 18
    },
    "1519": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1167,
        1181
      ],
      "op": "AND",
      "path": "0"
    },
    "1520": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1167,
        1181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1522": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1167,
        1181
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1523": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1167,
        1181
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1524": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1167,
        1181
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1525": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1167,
        1173
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1527": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1167,
        1181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1529": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1167,
        1181
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1530": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1167,
        1181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1532": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1167,
        1181
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1533": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1167,
        1181
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1534": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1167,
        1187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1536": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1167,
        1187
      ],
      "op": "ADD",
      "path": "0"
    },
    "1537": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1167,
        1187
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1538": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1167,
        1187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1540": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1167,
        1187
      ],
      "op": "AND",
      "path": "0"
    },
    "1541": {
      "branch": 29,
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1166,
        1187
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1542": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1158,
        1220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x651"
    },
    "1545": {
      "branch": 29,
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1158,
        1220
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1546": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1158,
        1220
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1548": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1158,
        1220
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1549": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1555": {
      "op": "SHL"
    },
    "1556": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1158,
        1220
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1557": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1158,
        1220
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1558": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1560": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1158,
        1220
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1562": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1158,
        1220
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1563": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1158,
        1220
      ],
      "op": "ADD",
      "path": "0"
    },
    "1564": {
      "op": "MSTORE"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "1567": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1569": {
      "op": "DUP3"
    },
    "1570": {
      "op": "ADD"
    },
    "1571": {
      "op": "MSTORE"
    },
    "1572": {
      "op": "PUSH32",
      "value": "0x54686520766F7465722068617320616C726561647920766F7465642E00000000"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1607": {
      "op": "DUP3"
    },
    "1608": {
      "op": "ADD"
    },
    "1609": {
      "op": "MSTORE"
    },
    "1610": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1612": {
      "op": "ADD"
    },
    "1613": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1158,
        1220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FF"
    },
    "1616": {
      "op": "JUMP"
    },
    "1617": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1158,
        1220
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1622": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1624": {
      "op": "SHL"
    },
    "1625": {
      "op": "SUB"
    },
    "1626": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1251,
        1265
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 19
    },
    "1627": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1251,
        1265
      ],
      "op": "AND",
      "path": "0"
    },
    "1628": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1251,
        1265
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1630": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1251,
        1265
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1631": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1251,
        1265
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1632": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1251,
        1265
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1633": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1251,
        1257
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1635": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1251,
        1265
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1637": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1251,
        1265
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1638": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1251,
        1265
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1640": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1251,
        1265
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1641": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1251,
        1265
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1642": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1251,
        1272
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1644": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1251,
        1272
      ],
      "op": "ADD",
      "path": "0"
    },
    "1645": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1251,
        1272
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1646": {
      "branch": 30,
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1251,
        1277
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1647": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1230,
        1339
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6C6"
    },
    "1650": {
      "branch": 30,
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1230,
        1339
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1651": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1230,
        1339
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1653": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1230,
        1339
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1654": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1658": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1660": {
      "op": "SHL"
    },
    "1661": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1230,
        1339
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1662": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1230,
        1339
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1663": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1665": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1230,
        1339
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1667": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1230,
        1339
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1668": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1230,
        1339
      ],
      "op": "ADD",
      "path": "0"
    },
    "1669": {
      "op": "MSTORE"
    },
    "1670": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1672": {
      "op": "DUP1"
    },
    "1673": {
      "op": "DUP3"
    },
    "1674": {
      "op": "ADD"
    },
    "1675": {
      "op": "MSTORE"
    },
    "1676": {
      "op": "PUSH32",
      "value": "0x566F74657220616C7265616479206861732074686520726967687420746F2076"
    },
    "1709": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1711": {
      "op": "DUP3"
    },
    "1712": {
      "op": "ADD"
    },
    "1713": {
      "op": "MSTORE"
    },
    "1714": {
      "op": "PUSH4",
      "value": "0x37BA3297"
    },
    "1719": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1721": {
      "op": "SHL"
    },
    "1722": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1724": {
      "op": "DUP3"
    },
    "1725": {
      "op": "ADD"
    },
    "1726": {
      "op": "MSTORE"
    },
    "1727": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1729": {
      "op": "ADD"
    },
    "1730": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1230,
        1339
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FF"
    },
    "1733": {
      "op": "JUMP"
    },
    "1734": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1230,
        1339
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1739": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1741": {
      "op": "SHL"
    },
    "1742": {
      "op": "SUB"
    },
    "1743": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1350,
        1364
      ],
      "op": "AND",
      "path": "0",
      "statement": 20
    },
    "1744": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1350,
        1364
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1746": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1350,
        1364
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1747": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1350,
        1364
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1748": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1350,
        1364
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1749": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1374,
        1375
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1751": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1350,
        1364
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1753": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1350,
        1364
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1754": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1350,
        1364
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1755": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1350,
        1364
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1756": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1350,
        1364
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1758": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1350,
        1364
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1759": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1350,
        1364
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1760": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1350,
        1364
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1761": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1350,
        1371
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1763": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1350,
        1371
      ],
      "op": "ADD",
      "path": "0"
    },
    "1764": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1350,
        1375
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1765": {
      "fn": "Ballot.giveRightToVote",
      "jump": "o",
      "offset": [
        974,
        1382
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1766": {
      "fn": "Ballot.winnerName",
      "offset": [
        2829,
        2959
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1767": {
      "fn": "Ballot.winnerName",
      "offset": [
        2874,
        2893
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1769": {
      "fn": "Ballot.winnerName",
      "offset": [
        2919,
        2928
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 21,
      "value": "0x2"
    },
    "1771": {
      "fn": "Ballot.winnerName",
      "offset": [
        2929,
        2946
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F2"
    },
    "1774": {
      "fn": "Ballot.winnerName",
      "offset": [
        2929,
        2944
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4FB"
    },
    "1777": {
      "fn": "Ballot.winnerName",
      "jump": "i",
      "offset": [
        2929,
        2946
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1778": {
      "fn": "Ballot.winnerName",
      "offset": [
        2929,
        2946
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1779": {
      "fn": "Ballot.winnerName",
      "offset": [
        2919,
        2947
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1780": {
      "fn": "Ballot.winnerName",
      "offset": [
        2919,
        2947
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1781": {
      "fn": "Ballot.winnerName",
      "offset": [
        2919,
        2947
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1782": {
      "fn": "Ballot.winnerName",
      "offset": [
        2919,
        2947
      ],
      "op": "LT",
      "path": "0"
    },
    "1783": {
      "fn": "Ballot.winnerName",
      "offset": [
        2919,
        2947
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x702"
    },
    "1786": {
      "fn": "Ballot.winnerName",
      "offset": [
        2919,
        2947
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1787": {
      "fn": "Ballot.winnerName",
      "offset": [
        2919,
        2947
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x702"
    },
    "1790": {
      "fn": "Ballot.winnerName",
      "offset": [
        2919,
        2947
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x762"
    },
    "1793": {
      "fn": "Ballot.winnerName",
      "jump": "i",
      "offset": [
        2919,
        2947
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1794": {
      "fn": "Ballot.winnerName",
      "offset": [
        2919,
        2947
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1795": {
      "fn": "Ballot.winnerName",
      "offset": [
        2919,
        2947
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1796": {
      "fn": "Ballot.winnerName",
      "offset": [
        2919,
        2947
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1798": {
      "fn": "Ballot.winnerName",
      "offset": [
        2919,
        2947
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1799": {
      "fn": "Ballot.winnerName",
      "offset": [
        2919,
        2947
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1801": {
      "fn": "Ballot.winnerName",
      "offset": [
        2919,
        2947
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1803": {
      "fn": "Ballot.winnerName",
      "offset": [
        2919,
        2947
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1804": {
      "fn": "Ballot.winnerName",
      "offset": [
        2919,
        2947
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1805": {
      "fn": "Ballot.winnerName",
      "offset": [
        2919,
        2947
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1807": {
      "fn": "Ballot.winnerName",
      "offset": [
        2919,
        2947
      ],
      "op": "MUL",
      "path": "0"
    },
    "1808": {
      "fn": "Ballot.winnerName",
      "offset": [
        2919,
        2947
      ],
      "op": "ADD",
      "path": "0"
    },
    "1809": {
      "fn": "Ballot.winnerName",
      "offset": [
        2919,
        2952
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1811": {
      "fn": "Ballot.winnerName",
      "offset": [
        2919,
        2952
      ],
      "op": "ADD",
      "path": "0"
    },
    "1812": {
      "fn": "Ballot.winnerName",
      "offset": [
        2919,
        2952
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1813": {
      "fn": "Ballot.winnerName",
      "offset": [
        2905,
        2952
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1814": {
      "fn": "Ballot.winnerName",
      "offset": [
        2905,
        2952
      ],
      "op": "POP",
      "path": "0"
    },
    "1815": {
      "fn": "Ballot.winnerName",
      "offset": [
        2829,
        2959
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1816": {
      "fn": "Ballot.winnerName",
      "jump": "o",
      "offset": [
        2829,
        2959
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1817": {
      "op": "JUMPDEST"
    },
    "1818": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1820": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1822": {
      "op": "DUP3"
    },
    "1823": {
      "op": "DUP5"
    },
    "1824": {
      "op": "SUB"
    },
    "1825": {
      "op": "SLT"
    },
    "1826": {
      "op": "ISZERO"
    },
    "1827": {
      "op": "PUSH2",
      "value": "0x72B"
    },
    "1830": {
      "op": "JUMPI"
    },
    "1831": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1833": {
      "op": "DUP1"
    },
    "1834": {
      "op": "REVERT"
    },
    "1835": {
      "op": "JUMPDEST"
    },
    "1836": {
      "op": "POP"
    },
    "1837": {
      "op": "CALLDATALOAD"
    },
    "1838": {
      "op": "SWAP2"
    },
    "1839": {
      "op": "SWAP1"
    },
    "1840": {
      "op": "POP"
    },
    "1841": {
      "jump": "o",
      "op": "JUMP"
    },
    "1842": {
      "op": "JUMPDEST"
    },
    "1843": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1845": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1847": {
      "op": "DUP3"
    },
    "1848": {
      "op": "DUP5"
    },
    "1849": {
      "op": "SUB"
    },
    "1850": {
      "op": "SLT"
    },
    "1851": {
      "op": "ISZERO"
    },
    "1852": {
      "op": "PUSH2",
      "value": "0x744"
    },
    "1855": {
      "op": "JUMPI"
    },
    "1856": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1858": {
      "op": "DUP1"
    },
    "1859": {
      "op": "REVERT"
    },
    "1860": {
      "op": "JUMPDEST"
    },
    "1861": {
      "op": "DUP2"
    },
    "1862": {
      "op": "CALLDATALOAD"
    },
    "1863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1867": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1869": {
      "op": "SHL"
    },
    "1870": {
      "op": "SUB"
    },
    "1871": {
      "op": "DUP2"
    },
    "1872": {
      "op": "AND"
    },
    "1873": {
      "op": "DUP2"
    },
    "1874": {
      "op": "EQ"
    },
    "1875": {
      "op": "PUSH2",
      "value": "0x75B"
    },
    "1878": {
      "op": "JUMPI"
    },
    "1879": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1881": {
      "op": "DUP1"
    },
    "1882": {
      "op": "REVERT"
    },
    "1883": {
      "op": "JUMPDEST"
    },
    "1884": {
      "op": "SWAP4"
    },
    "1885": {
      "op": "SWAP3"
    },
    "1886": {
      "op": "POP"
    },
    "1887": {
      "op": "POP"
    },
    "1888": {
      "op": "POP"
    },
    "1889": {
      "jump": "o",
      "op": "JUMP"
    },
    "1890": {
      "op": "JUMPDEST"
    },
    "1891": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1898": {
      "op": "SHL"
    },
    "1899": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1901": {
      "op": "MSTORE"
    },
    "1902": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1906": {
      "op": "MSTORE"
    },
    "1907": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1909": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1911": {
      "op": "REVERT"
    },
    "1912": {
      "op": "JUMPDEST"
    },
    "1913": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1918": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1920": {
      "op": "SHL"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1923": {
      "op": "MSTORE"
    },
    "1924": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1926": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1928": {
      "op": "MSTORE"
    },
    "1929": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1931": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1933": {
      "op": "REVERT"
    },
    "1934": {
      "op": "JUMPDEST"
    },
    "1935": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1937": {
      "op": "DUP3"
    },
    "1938": {
      "op": "NOT"
    },
    "1939": {
      "op": "DUP3"
    },
    "1940": {
      "op": "GT"
    },
    "1941": {
      "op": "ISZERO"
    },
    "1942": {
      "op": "PUSH2",
      "value": "0x7A1"
    },
    "1945": {
      "op": "JUMPI"
    },
    "1946": {
      "op": "PUSH2",
      "value": "0x7A1"
    },
    "1949": {
      "op": "PUSH2",
      "value": "0x778"
    },
    "1952": {
      "jump": "i",
      "op": "JUMP"
    },
    "1953": {
      "op": "JUMPDEST"
    },
    "1954": {
      "op": "POP"
    },
    "1955": {
      "op": "ADD"
    },
    "1956": {
      "op": "SWAP1"
    },
    "1957": {
      "jump": "o",
      "op": "JUMP"
    },
    "1958": {
      "op": "JUMPDEST"
    },
    "1959": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1961": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1963": {
      "op": "NOT"
    },
    "1964": {
      "op": "DUP3"
    },
    "1965": {
      "op": "EQ"
    },
    "1966": {
      "op": "ISZERO"
    },
    "1967": {
      "op": "PUSH2",
      "value": "0x7BA"
    },
    "1970": {
      "op": "JUMPI"
    },
    "1971": {
      "op": "PUSH2",
      "value": "0x7BA"
    },
    "1974": {
      "op": "PUSH2",
      "value": "0x778"
    },
    "1977": {
      "jump": "i",
      "op": "JUMP"
    },
    "1978": {
      "op": "JUMPDEST"
    },
    "1979": {
      "op": "POP"
    },
    "1980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1982": {
      "op": "ADD"
    },
    "1983": {
      "op": "SWAP1"
    },
    "1984": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "54a608459dd94c2b5dc100689f54a5150819c91f",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\ncontract Ballot {\n    // storage\n    address public chairperson;\n\n    // custom type to represent a single voter\n    struct Voter {\n        address delegate; // person delegated to vote on your behalf\n        uint256 vote; // index of the voted proposal\n        uint256 weight; // weight of the voter\n        bool voted; // whether voter has voted or not\n    }\n\n    // custom type for a single proposal\n    struct Proposal {\n        bytes32 name; // 32-bytes (eg. Migrate to Eth2)\n        uint256 voteCount; // number of accumulated votes\n    }\n\n    mapping(address => Voter) public voters;\n\n    Proposal[] public proposals;\n\n    constructor(bytes32[] memory proposalName) {\n        chairperson = msg.sender;\n        voters[chairperson].weight = 1;\n\n        for (uint256 i = 0; i < proposalName.length; i++) {\n            proposals.push(Proposal({name: proposalName[i], voteCount: 0}));\n        }\n    }\n\n    function giveRightToVote(address _voter) external {\n        require(\n            msg.sender == chairperson,\n            \"Only chairperson can assign rights to vote\"\n        );\n        require(!voters[_voter].voted, \"The voter has already voted.\");\n        require(\n            voters[_voter].weight == 0,\n            \"Voter already has the right to vote.\"\n        );\n\n        voters[_voter].weight = 1;\n    }\n\n    function delegate(address _to) external {\n        Voter storage sender = voters[msg.sender];\n        require(!sender.voted, \"You already voted. Cannot delegate.\");\n        require(msg.sender != _to, \"You cannot delegate to yourself.\");\n        while (voters[_to].delegate != address(0)) {\n            _to = voters[_to].delegate;\n\n            require(_to != msg.sender, \"Found loop in delegation\");\n        }\n\n        Voter storage delegate_ = voters[_to];\n\n        require(delegate_.weight > 0);\n        sender.voted = true;\n        sender.delegate = _to;\n        if (!delegate_.voted) {\n            delegate_.weight += sender.weight;\n        } else {\n            proposals[delegate_.vote].voteCount += sender.weight;\n        }\n    }\n\n    function vote(uint256 _proposal) external {\n        Voter storage sender = voters[msg.sender];\n        require(sender.weight > 0, \"No rights to vote\");\n        require(!sender.voted, \"You already voted\");\n\n        sender.vote = _proposal;\n        sender.voted = true;\n\n        proposals[_proposal].voteCount += sender.weight;\n    }\n\n    function winningProposal() public view returns (uint256 winningProposal_) {\n        uint256 winningVoteCount = 0;\n\n        for (uint256 p = 0; p < proposals.length; p++) {\n            if (proposals[p].voteCount > winningVoteCount) {\n                winningVoteCount = proposals[p].voteCount;\n                winningProposal_ = p;\n            }\n        }\n    }\n\n    function winnerName() external view returns (bytes32 winnerName_) {\n        winnerName_ = proposals[winningProposal()].name;\n    }\n}\n",
  "sourceMap": "66:2895:0:-:0;;;696:272;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;749:11;:24;;-1:-1:-1;;;;;;749:24:0;763:10;749:24;;;;;783:19;;749:24;783:19;;;;;;;:26;;:30;824:138;848:12;:19;844:1;:23;824:138;;;888:9;903:47;;;;;;;;919:12;932:1;919:15;;;;;;;;:::i;:::-;;;;;;;;;;;;903:47;;947:1;903:47;;;;;;888:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;869:3;;;;:::i;:::-;;;;824:138;;;;696:272;66:2895;;14:127:1;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1105;241:6;272:2;315;303:9;294:7;290:23;286:32;283:52;;;331:1;328;321:12;283:52;358:16;;-1:-1:-1;;;;;423:14:1;;;420:34;;;450:1;447;440:12;420:34;488:6;477:9;473:22;463:32;;533:7;526:4;522:2;518:13;514:27;504:55;;555:1;552;545:12;504:55;584:2;578:9;606:2;602;599:10;596:36;;;612:18;;:::i;:::-;658:2;655:1;651:10;690:2;684:9;753:2;749:7;744:2;740;736:11;732:25;724:6;720:38;808:6;796:10;793:22;788:2;776:10;773:18;770:46;767:72;;;819:18;;:::i;:::-;855:2;848:22;905:18;;;939:15;;;;-1:-1:-1;981:11:1;;;977:20;;;1009:19;;;1006:39;;;1041:1;1038;1031:12;1006:39;1065:11;;;;1085:135;1101:6;1096:3;1093:15;1085:135;;;1167:10;;1155:23;;1118:12;;;;1198;;;;1085:135;;;1239:6;146:1105;-1:-1:-1;;;;;;;;146:1105:1:o;1256:127::-;1317:10;1312:3;1308:20;1305:1;1298:31;1348:4;1345:1;1338:15;1372:4;1369:1;1362:15;1388:232;1427:3;-1:-1:-1;;1448:17:1;;1445:140;;;1507:10;1502:3;1498:20;1495:1;1488:31;1542:4;1539:1;1532:15;1570:4;1567:1;1560:15;1445:140;-1:-1:-1;1612:1:1;1601:13;;1388:232::o;:::-;66:2895:0;;;;;;",
  "sourcePath": "contracts/Ballot.sol",
  "type": "contract"
}